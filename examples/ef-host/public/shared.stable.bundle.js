(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["shared.stable"],{

/***/ "1ae02a0f":
/*!***********************************************!*\
  !*** ./node_modules/n-ui-foundations/main.js ***!
  \***********************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("const {\n  debounce,\n  throttle\n} = __webpack_require__(/*! @financial-times/o-utils/main */ \"6d36580f\");\nconst cookieStore = __webpack_require__(/*! ./js/cookies */ \"ae05e6f9\");\nconst getSpoorNumber = () => {\n  let spoorId = cookieStore.get('spoor-id').replace(/-/g, '');\n  spoorId = spoorId.substring(spoorId.length - 12, spoorId.length); // Don't overflow the int\n  return parseInt(spoorId, 16);\n};\nmodule.exports = {\n  $: function (sel, ctx) {\n    return (ctx || document).querySelector(sel);\n  },\n  $$: function (sel, ctx) {\n    return [].slice.call((ctx || document).querySelectorAll(sel));\n  },\n  debounce,\n  throttle,\n  uuid: function uuid(a) {\n    return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n  },\n  ascii: __webpack_require__(/*! ./js/to-ascii */ \"8b3ea372\"),\n  broadcast: function (name, data) {\n    let bubbles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const rootEl = Element.prototype.isPrototypeOf(this) ? this : document.body;\n    let event;\n    try {\n      event = new CustomEvent(name, {\n        bubbles: bubbles,\n        cancelable: true,\n        detail: data\n      });\n    } catch (e) {\n      event = CustomEvent.initCustomEvent(name, true, true, data);\n    }\n    rootEl.dispatchEvent(event);\n  },\n  perfMark: __webpack_require__(/*! ./js/perf-mark */ \"7d23ec59\"),\n  sampleUsers: (pct, seed) => {\n    if (!seed) {\n      throw new Error('sampleUsers needs a seed string to be passed in as the second parameter');\n    }\n    const seedAsNumber = seed.split('').reduce((num, str, i) => num + Math.pow(2, i) * str.charCodeAt(0), 0);\n    return (getSpoorNumber() + seedAsNumber) % 100 < pct;\n  },\n  cookieStore,\n  createToggler: _ref => {\n    let {\n      flag = true,\n      callback\n    } = _ref;\n    return () => {\n      if (typeof callback === 'function') {\n        callback({\n          flag\n        });\n      }\n      flag = !flag;\n      return flag;\n    };\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMWFlMDJhMGYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbi11aS1mb3VuZGF0aW9ucy9tYWluLmpzP2UzMzUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBkZWJvdW5jZSwgdGhyb3R0bGUgfSA9IHJlcXVpcmUoJ0BmaW5hbmNpYWwtdGltZXMvby11dGlscy9tYWluJyk7XG5jb25zdCBjb29raWVTdG9yZSA9IHJlcXVpcmUoJy4vanMvY29va2llcycpO1xuY29uc3QgZ2V0U3Bvb3JOdW1iZXIgPSAoKSA9PiB7XG5cdGxldCBzcG9vcklkID0gY29va2llU3RvcmUuZ2V0KCdzcG9vci1pZCcpLnJlcGxhY2UoLy0vZywgJycpO1xuXHRzcG9vcklkID0gc3Bvb3JJZC5zdWJzdHJpbmcoc3Bvb3JJZC5sZW5ndGggLSAxMiwgc3Bvb3JJZC5sZW5ndGgpOyAvLyBEb24ndCBvdmVyZmxvdyB0aGUgaW50XG5cdHJldHVybiBwYXJzZUludChzcG9vcklkLCAxNik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0JDogZnVuY3Rpb24gKHNlbCwgY3R4KSB7IHJldHVybiAoY3R4IHx8IGRvY3VtZW50KS5xdWVyeVNlbGVjdG9yKHNlbCk7IH0sXG5cdCQkOiBmdW5jdGlvbiAoc2VsLCBjdHgpIHsgcmV0dXJuIFtdLnNsaWNlLmNhbGwoKGN0eCB8fCBkb2N1bWVudCkucXVlcnlTZWxlY3RvckFsbChzZWwpKTt9LFxuXHRkZWJvdW5jZSxcblx0dGhyb3R0bGUsXG5cdHV1aWQ6IGZ1bmN0aW9uIHV1aWQgKGEpe3JldHVybiBhPyhhXk1hdGgucmFuZG9tKCkqMTY+PmEvNCkudG9TdHJpbmcoMTYpOihbMWU3XSstMWUzKy00ZTMrLThlMystMWUxMSkucmVwbGFjZSgvWzAxOF0vZyx1dWlkKTt9LFxuXHRhc2NpaTogcmVxdWlyZSgnLi9qcy90by1hc2NpaScpLFxuXHRicm9hZGNhc3Q6IGZ1bmN0aW9uIChuYW1lLCBkYXRhLCBidWJibGVzID0gdHJ1ZSkge1xuXHRcdGNvbnN0IHJvb3RFbCA9IEVsZW1lbnQucHJvdG90eXBlLmlzUHJvdG90eXBlT2YodGhpcykgPyB0aGlzIDogZG9jdW1lbnQuYm9keTtcblx0XHRsZXQgZXZlbnQ7XG5cblx0XHR0cnkge1xuXHRcdFx0ZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQobmFtZSwge2J1YmJsZXM6IGJ1YmJsZXMsIGNhbmNlbGFibGU6IHRydWUsIGRldGFpbDogZGF0YX0pO1xuXHRcdH0gY2F0Y2ggKGUpIHtcblx0XHRcdGV2ZW50ID0gQ3VzdG9tRXZlbnQuaW5pdEN1c3RvbUV2ZW50KG5hbWUsIHRydWUsIHRydWUsIGRhdGEpO1xuXHRcdH1cblx0XHRyb290RWwuZGlzcGF0Y2hFdmVudChldmVudCk7XG5cdH0sXG5cdHBlcmZNYXJrOiByZXF1aXJlKCcuL2pzL3BlcmYtbWFyaycpLFxuXHRzYW1wbGVVc2VyczogKHBjdCwgc2VlZCkgPT4ge1xuXHRcdGlmICghc2VlZCkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdzYW1wbGVVc2VycyBuZWVkcyBhIHNlZWQgc3RyaW5nIHRvIGJlIHBhc3NlZCBpbiBhcyB0aGUgc2Vjb25kIHBhcmFtZXRlcicpO1xuXHRcdH1cblx0XHRjb25zdCBzZWVkQXNOdW1iZXIgPSBzZWVkLnNwbGl0KCcnKS5yZWR1Y2UoKG51bSwgc3RyLCBpKSA9PiBudW0gKyBNYXRoLnBvdygyLCBpKSAqIHN0ci5jaGFyQ29kZUF0KDApLCAwKTtcblx0XHRyZXR1cm4gKGdldFNwb29yTnVtYmVyKCkgKyBzZWVkQXNOdW1iZXIpICUgMTAwIDwgcGN0O1xuXHR9LFxuXHRjb29raWVTdG9yZSxcblx0Y3JlYXRlVG9nZ2xlcjogKHsgZmxhZyA9IHRydWUsIGNhbGxiYWNrIH0pID0+IHtcblx0XHRyZXR1cm4gKCkgPT4ge1xuXHRcdFx0aWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHRjYWxsYmFjayh7IGZsYWcgfSk7XG5cdFx0XHR9XG5cdFx0XHRmbGFnID0gIWZsYWc7XG5cdFx0XHRyZXR1cm4gZmxhZztcblx0XHR9O1xuXHR9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1ae02a0f\n");

/***/ }),

/***/ "3a8f0c89":
/*!**********************************************!*\
  !*** ./node_modules/n-topic-search/index.js ***!
  \**********************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ftdomdelegate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ftdomdelegate */ \"e6b19cd3\");\n/* harmony import */ var n_ui_foundations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! n-ui-foundations */ \"1ae02a0f\");\n/* harmony import */ var n_ui_foundations__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(n_ui_foundations__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _src_renderers_search_suggestions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/renderers/search-suggestions */ \"3bf79137\");\n\n\n\nlet defaultHostName = 'www.ft.com';\n\n// Check if developing locally, if we are then proxy the search api through\n// the demo application.\nconst hostname = window.location.hostname;\nif (hostname === 'localhost' || hostname === 'local.ft.com') {\n  defaultHostName = window.location.host;\n}\nfunction getNonMatcher(container) {\n  if (typeof container === 'string') {\n    return function (el) {\n      return el && el !== document && !el.matches(container);\n    };\n  }\n  return function (el) {\n    return el && el !== document && el !== container;\n  };\n}\nfunction isOutside(el, container) {\n  const doesntMatch = getNonMatcher(container);\n  while (doesntMatch(el)) {\n    el = el.parentNode;\n  }\n  return !el || el === document;\n}\nclass TopicSearch {\n  constructor(containerEl) {\n    let {\n      listComponent = _src_renderers_search_suggestions__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n      preSuggest = a => a,\n      hostName = defaultHostName,\n      errorCallback = null\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.container = containerEl;\n    this.listComponent = listComponent;\n    this.preSuggest = preSuggest;\n    this.searchEl = this.container.querySelector('[data-n-topic-search-input]');\n    this.dataSrc = `//${hostName}/search-api/suggestions?partial=`;\n    this.categories = (this.container.getAttribute('data-n-topic-search-categories') || 'tags').split(',');\n    this.itemTag = this.container.getAttribute('data-n-topic-search-item-tag') || 'a';\n    this.includeViewAllLink = this.container.hasAttribute('data-n-topic-search-view-all');\n    this.minLength = 2;\n    this.errorCallback = errorCallback;\n    this.init();\n  }\n  init() {\n    this.suggestions = [];\n    this.suggestionListContainer = document.createElement('div');\n    this.searchEl.parentNode.insertBefore(this.suggestionListContainer, this.searchEl.nextSibling);\n    this.suggestionsView = this.listComponent(this.suggestionListContainer, {\n      categories: this.categories,\n      itemTag: this.itemTag,\n      includeViewAllLink: this.includeViewAllLink,\n      searchEl: this.searchEl\n    });\n    this.searchTermHistory = [];\n    this.bodyDelegate = new ftdomdelegate__WEBPACK_IMPORTED_MODULE_0__[\"default\"](document.body);\n    this.onType = Object(n_ui_foundations__WEBPACK_IMPORTED_MODULE_1__[\"debounce\"])(this.onType, 150).bind(this);\n    this.onFocus = this.onFocus.bind(this);\n\n    // prevent scrolling when pressing up and down arrows\n    this.searchEl.addEventListener('keydown', ev => {\n      if (ev.which === 40 || ev.which === 38) {\n        ev.preventDefault();\n      }\n    });\n    this.searchEl.addEventListener('keyup', ev => {\n      switch (ev.which) {\n        case 13:\n          return;\n        // enter\n        case 9:\n          return;\n        // tab\n        case 27:\n          //esc\n          this.hide();\n          break;\n        case 40:\n          this.onDownArrow(ev);\n          break;\n        default:\n          this.onType(ev);\n          break;\n      }\n    });\n    this.searchEl.addEventListener('focus', this.onFocus);\n    this.searchEl.addEventListener('click', this.onFocus);\n\n    // prevent scrolling when pressing up and down arrows\n    this.suggestionListContainer.addEventListener('keydown', ev => {\n      if (ev.which === 40 || ev.which === 38) {\n        ev.preventDefault();\n      }\n    });\n    this.suggestionListContainer.addEventListener('keyup', ev => {\n      switch (ev.which) {\n        case 27:\n          // esc\n          this.hideAndFocusInput();\n          break;\n        case 13:\n          this.onSelect(ev);\n          break;\n        case 9:\n          return;\n        // tab\n        case 40:\n          this.onDownArrow(ev);\n          break;\n        case 38:\n          this.onUpArrow(ev);\n          break;\n        default:\n          break;\n      }\n    });\n    this.suggestionListContainer.addEventListener('click', ev => this.onSelect(ev));\n  }\n\n  // EVENT HANDLERS\n  onType() {\n    this.searchTerm = this.searchEl.value.trim();\n    this.searchTermHistory.push(this.searchTerm);\n    this.getSuggestions(this.searchTerm);\n    [].forEach.call(this.suggestionListContainer.querySelectorAll('li'), function (el) {\n      el.setAttribute('data-trackable-meta', '{\"search-term\":\"' + this.searchTerm + '\"}');\n    }.bind(this));\n  }\n  onFocus(ev) {\n    // select all of the current text\n    ev.target.setSelectionRange ? ev.target.setSelectionRange(0, ev.target.value.length) : ev.target.select();\n\n    // If the input is programmatically focussed we may not want to show the suggestions list\n    // e.g. when intentionally closing the suggestions list.\n    if (this.preventShowOnFocus) {\n      this.preventShowOnFocus = false;\n    } else {\n      this.show();\n    }\n  }\n  onDownArrow(ev) {\n    if (this.suggestionTargets.length) {\n      const position = (this.suggestionTargets.indexOf(ev.target) + 1) % this.suggestionTargets.length;\n      this.suggestionTargets[position].focus();\n    }\n    ev.preventDefault(); //disable page scrolling\n  }\n  onTab(ev) {\n    if (this.suggestionTargets.length) {\n      this.onDownArrow(ev); // functionally the same as hitting the down arrow.\n    }\n  }\n  onSelect(ev) {\n    let target = ev.target;\n    while (!target.classList.contains('n-topic-search__target')) {\n      target = target.parentNode;\n      if (target.classList.contains('n-topic-search')) {\n        // click was not on an item\n        return;\n      }\n    }\n    this.suggestionsView.handleSelection(target, ev, this);\n  }\n  onUpArrow(ev) {\n    if (this.suggestionTargets.length) {\n      const oldPosition = this.suggestionTargets.indexOf(ev.target);\n      if (oldPosition === 0) {\n        this.searchEl.focus();\n      } else {\n        this.suggestionTargets[(oldPosition - 1) % this.suggestionTargets.length].focus();\n      }\n    }\n    ev.preventDefault(); //disable page scrolling\n  }\n\n  // INTERNALS\n  getSuggestions(value) {\n    if (value.length >= this.minLength) {\n      fetch(this.dataSrc + encodeURIComponent(value)).then(response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      }).then(suggestions => this.suggest(this.preSuggest(suggestions))).catch(err => {\n        this.errorCallback && this.errorCallback(err);\n        setTimeout(() => {\n          throw err;\n        });\n      });\n    } else {\n      this.unsuggest();\n    }\n  }\n  isTimelyResponse(term) {\n    // handle race conditions between e.g. TRU returning slower than TRUMP\n    const index = this.searchTermHistory.indexOf(term);\n    if (index > -1) {\n      this.searchTermHistory = this.searchTermHistory.slice(index);\n      return true;\n    }\n    return false;\n  }\n  suggest(suggestions) {\n    if (!suggestions.query || !this.isTimelyResponse(suggestions.query.partial)) {\n      return;\n    }\n    this.suggestions = suggestions;\n    this.suggestionsView.setState({\n      searchTerm: this.searchTerm,\n      suggestions: this.suggestions\n    });\n    this.show();\n    this.suggestionTargets = Array.from(this.suggestionListContainer.querySelectorAll('.n-topic-search__target'));\n  }\n  unsuggest() {\n    this.hide();\n  }\n  hide() {\n    this.suggestionListContainer.setAttribute('hidden', '');\n    this.bodyDelegate.off();\n  }\n  hideAndFocusInput() {\n    // This flag is used to prevent .show() being called after shifting focus back to\n    // the input element when intending to .hide() the suggestions list.\n    this.preventShowOnFocus = true;\n    this.hide();\n    this.searchEl.focus();\n  }\n  reset() {\n    this.hide();\n    this.suggestions = [];\n    this.suggestionTargets = [];\n    this.suggestionsView.setState({\n      suggestions: {\n        tags: [],\n        equities: []\n      },\n      searchTerm: ''\n    });\n    this.searchTermHistory = [];\n    this.searchTerm = '';\n    this.searchEl.value = '';\n  }\n  show() {\n    this.suggestionListContainer.removeAttribute('hidden');\n    ['focus', 'touchstart', 'mousedown'].forEach(type => {\n      this.bodyDelegate.on(type, ev => {\n        if (isOutside(ev.target, this.container)) {\n          this.hide();\n        }\n      });\n    });\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (TopicSearch);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3a8f0c89\n");

/***/ }),

/***/ "3bf79137":
/*!*************************************************************************!*\
  !*** ./node_modules/n-topic-search/src/renderers/search-suggestions.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _base_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-renderer */ \"ae50df7e\");\nconst DISPLAY_ITEMS = 5;\n\nconst headingMapping = {\n  concepts: 'News',\n  equities: 'Securities'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (container, options) {\n  return new SuggestionList(container, options);\n});\nclass SuggestionList extends _base_renderer__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(container, options) {\n    super(container, options);\n    this.renderSuggestionGroup = this.renderSuggestionGroup.bind(this);\n    this.createHtml();\n    this.render();\n  }\n  renderTailLink(group) {\n    if (group.tailLink) {\n      const linkAttrs = `\n\t\t\t\tclass=\"n-topic-search__target n-topic-search__target--tail\"\n\t\t\t\thref=\"${group.tailLink.url}\"\n\t\t\t\tdata-trackable=\"${group.tailLink.trackable}\"\"\n\t\t\t`;\n      return `<a ${linkAttrs} tabindex=\"0\">${group.tailLink.innerHtml}</a>`;\n    }\n  }\n  renderSuggestionLink(suggestion, group) {\n    return `<li class=\"n-topic-search__item\">\n\t\t\t<a class=\"n-topic-search__target ${group.linkClassName}\"\n\t\t\t\thref=\"${suggestion.url}\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tdata-trackable=\"link\"\n\t\t\t\tdata-suggestion-id=\"${suggestion.id}\"\n\t\t\t\tdata-suggestion-type=\"${suggestion.type}\"\n\t\t\t>${suggestion.html}</a>\n\t\t</li>`;\n  }\n  renderSuggestionGroup(group) {\n    let html = `<div class=\"n-topic-search__group ${group.className}\" data-trackable=\"${group.trackable}\">`;\n    html += this.options.categories.length > 1 ? `<div class=\"n-topic-search__heading\">${group.heading}</div>` : '';\n    if (group.suggestions.length || group.emptyHtml) {\n      html += `<ul class=\"n-topic-search__item-list\">\n\t\t\t\t${group.suggestions.map(suggestion => this.renderSuggestionLink(suggestion, group)).join('')}\n\t\t\t\t<li class=\"n-topic-search__item\">\n\t\t\t\t\t${this.renderTailLink(group)}\n\t\t\t\t</li>\n\t\t\t</ul>`;\n    }\n    html += '</div>';\n    return html;\n  }\n  createHtml() {\n    const hasConcepts = this.state.suggestions.concepts && this.state.suggestions.concepts.length;\n    const hasEquities = this.state.suggestions.equities && this.state.suggestions.equities.length;\n    const hasSuggestions = hasConcepts || hasEquities;\n    const suggestions = [];\n    this.items = [];\n    if (this.options.categories.includes('concepts')) {\n      suggestions.push({\n        heading: headingMapping['concepts'],\n        linkClassName: 'n-topic-search__target--news',\n        trackable: 'news',\n        suggestions: this.state.suggestions.concepts.slice(0, DISPLAY_ITEMS).map(suggestion => ({\n          html: this.highlight(suggestion.prefLabel),\n          url: suggestion.url,\n          id: suggestion.id,\n          type: 'tag'\n        })),\n        tailLink: this.options.includeViewAllLink && {\n          url: `/search?q=${this.state.searchTerm}`,\n          innerHtml: `<span>See all news matching <mark>${this.state.searchTerm}</mark></span>`,\n          trackable: 'see-all'\n        }\n      });\n    }\n    if (this.options.categories.includes('equities')) {\n      suggestions.push({\n        heading: headingMapping['equities'],\n        trackable: 'equities',\n        linkClassName: 'n-topic-search__target--equities',\n        emptyHtml: '<div className=\"n-topic-search__no-results-message\">No equities found</div>',\n        suggestions: this.state.suggestions.equities.slice(0, DISPLAY_ITEMS).map(suggestion => ({\n          html: `<span class=\"n-topic-search__target__equity-name\">${this.highlight(suggestion.name)}</span><abbr>${this.highlight(suggestion.symbol)}</abbr>`,\n          url: suggestion.url,\n          id: suggestion.symbol,\n          type: 'equity'\n        })),\n        tailLink: this.options.includeViewAllLink && {\n          url: `https://markets.ft.com/data/search?query=${this.state.searchTerm}`,\n          innerHtml: `<span>See all quotes matching <mark>${this.state.searchTerm}</mark></span>`,\n          trackable: 'see-all'\n        }\n      });\n    }\n    this.newHtml = `\n\t\t\t<div aria-live=\"assertive\">\n\t\t\t\t${hasSuggestions ? `<div\n\t\t\t\t\tclass=\"o-normalise-visually-hidden n-topic-search__suggestions_explanation\">\n\t\t\t\t\tSearch results have been displayed. To jump to the list of suggestions press the down arrow key.\n\t\t\t\t</div>` : ''}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"n-topic-search n-topic-search__suggestions\"\n\t\t\t\t\t${hasSuggestions ? '' : 'hidden'}\n\t\t\t\t\tdata-trackable=\"typeahead\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"o-normalise-visually-hidden\">Suggestions include</div>\n\t\t\t\t\t${suggestions.map(this.renderSuggestionGroup).join('')}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t`;\n  }\n  handleSelection(el, ev) {\n    ev.stopPropagation();\n    // we don't prevent default as the link's url is a link to the relevant stream page\n    return;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiM2JmNzkxMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbi10b3BpYy1zZWFyY2gvc3JjL3JlbmRlcmVycy9zZWFyY2gtc3VnZ2VzdGlvbnMuanM/ZWRlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBESVNQTEFZX0lURU1TID0gNTtcbmltcG9ydCBCYXNlUmVuZGVyZXIgZnJvbSAnLi9iYXNlLXJlbmRlcmVyJztcblxuY29uc3QgaGVhZGluZ01hcHBpbmcgPSB7XG5cdGNvbmNlcHRzOiAnTmV3cycsXG5cdGVxdWl0aWVzOiAnU2VjdXJpdGllcydcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChjb250YWluZXIsIG9wdGlvbnMpIHtcblx0cmV0dXJuIG5ldyBTdWdnZXN0aW9uTGlzdChjb250YWluZXIsIG9wdGlvbnMpO1xufVxuXG5jbGFzcyBTdWdnZXN0aW9uTGlzdCBleHRlbmRzIEJhc2VSZW5kZXJlciB7XG5cdGNvbnN0cnVjdG9yIChjb250YWluZXIsIG9wdGlvbnMpIHtcblx0XHRzdXBlcihjb250YWluZXIsIG9wdGlvbnMpO1xuXHRcdHRoaXMucmVuZGVyU3VnZ2VzdGlvbkdyb3VwID0gdGhpcy5yZW5kZXJTdWdnZXN0aW9uR3JvdXAuYmluZCh0aGlzKTtcblx0XHR0aGlzLmNyZWF0ZUh0bWwoKTtcblx0XHR0aGlzLnJlbmRlcigpO1xuXHR9XG5cblx0cmVuZGVyVGFpbExpbmsgKGdyb3VwKSB7XG5cdFx0aWYgKGdyb3VwLnRhaWxMaW5rKSB7XG5cdFx0XHRjb25zdCBsaW5rQXR0cnMgPSBgXG5cdFx0XHRcdGNsYXNzPVwibi10b3BpYy1zZWFyY2hfX3RhcmdldCBuLXRvcGljLXNlYXJjaF9fdGFyZ2V0LS10YWlsXCJcblx0XHRcdFx0aHJlZj1cIiR7Z3JvdXAudGFpbExpbmsudXJsfVwiXG5cdFx0XHRcdGRhdGEtdHJhY2thYmxlPVwiJHtncm91cC50YWlsTGluay50cmFja2FibGV9XCJcIlxuXHRcdFx0YDtcblx0XHRcdHJldHVybiBgPGEgJHtsaW5rQXR0cnN9IHRhYmluZGV4PVwiMFwiPiR7Z3JvdXAudGFpbExpbmsuaW5uZXJIdG1sfTwvYT5gO1xuXHRcdH1cblx0fVxuXG5cdHJlbmRlclN1Z2dlc3Rpb25MaW5rIChzdWdnZXN0aW9uLCBncm91cCkge1xuXHRcdHJldHVybiBgPGxpIGNsYXNzPVwibi10b3BpYy1zZWFyY2hfX2l0ZW1cIj5cblx0XHRcdDxhIGNsYXNzPVwibi10b3BpYy1zZWFyY2hfX3RhcmdldCAke2dyb3VwLmxpbmtDbGFzc05hbWV9XCJcblx0XHRcdFx0aHJlZj1cIiR7c3VnZ2VzdGlvbi51cmx9XCJcblx0XHRcdFx0dGFiaW5kZXg9XCIwXCJcblx0XHRcdFx0ZGF0YS10cmFja2FibGU9XCJsaW5rXCJcblx0XHRcdFx0ZGF0YS1zdWdnZXN0aW9uLWlkPVwiJHtzdWdnZXN0aW9uLmlkfVwiXG5cdFx0XHRcdGRhdGEtc3VnZ2VzdGlvbi10eXBlPVwiJHtzdWdnZXN0aW9uLnR5cGV9XCJcblx0XHRcdD4ke3N1Z2dlc3Rpb24uaHRtbH08L2E+XG5cdFx0PC9saT5gO1xuXHR9XG5cblx0cmVuZGVyU3VnZ2VzdGlvbkdyb3VwIChncm91cCkge1xuXHRcdGxldCBodG1sID0gYDxkaXYgY2xhc3M9XCJuLXRvcGljLXNlYXJjaF9fZ3JvdXAgJHtncm91cC5jbGFzc05hbWV9XCIgZGF0YS10cmFja2FibGU9XCIke2dyb3VwLnRyYWNrYWJsZX1cIj5gO1xuXG5cdFx0aHRtbCArPSB0aGlzLm9wdGlvbnMuY2F0ZWdvcmllcy5sZW5ndGggPiAxID8gYDxkaXYgY2xhc3M9XCJuLXRvcGljLXNlYXJjaF9faGVhZGluZ1wiPiR7Z3JvdXAuaGVhZGluZ308L2Rpdj5gIDogJyc7XG5cblx0XHRpZiAoZ3JvdXAuc3VnZ2VzdGlvbnMubGVuZ3RoIHx8IGdyb3VwLmVtcHR5SHRtbCkge1xuXHRcdFx0aHRtbCArPSBgPHVsIGNsYXNzPVwibi10b3BpYy1zZWFyY2hfX2l0ZW0tbGlzdFwiPlxuXHRcdFx0XHQke2dyb3VwLnN1Z2dlc3Rpb25zLm1hcChzdWdnZXN0aW9uID0+IHRoaXMucmVuZGVyU3VnZ2VzdGlvbkxpbmsoc3VnZ2VzdGlvbiwgZ3JvdXApKS5qb2luKCcnKX1cblx0XHRcdFx0PGxpIGNsYXNzPVwibi10b3BpYy1zZWFyY2hfX2l0ZW1cIj5cblx0XHRcdFx0XHQke3RoaXMucmVuZGVyVGFpbExpbmsoZ3JvdXApfVxuXHRcdFx0XHQ8L2xpPlxuXHRcdFx0PC91bD5gO1xuXHRcdH1cblx0XHRodG1sICs9ICc8L2Rpdj4nO1xuXHRcdHJldHVybiBodG1sO1xuXHR9XG5cblx0Y3JlYXRlSHRtbCAoKSB7XG5cblx0XHRjb25zdCBoYXNDb25jZXB0cyA9IHRoaXMuc3RhdGUuc3VnZ2VzdGlvbnMuY29uY2VwdHMgJiYgdGhpcy5zdGF0ZS5zdWdnZXN0aW9ucy5jb25jZXB0cy5sZW5ndGg7XG5cdFx0Y29uc3QgaGFzRXF1aXRpZXMgPSB0aGlzLnN0YXRlLnN1Z2dlc3Rpb25zLmVxdWl0aWVzICYmIHRoaXMuc3RhdGUuc3VnZ2VzdGlvbnMuZXF1aXRpZXMubGVuZ3RoO1xuXHRcdGNvbnN0IGhhc1N1Z2dlc3Rpb25zID0gaGFzQ29uY2VwdHMgfHwgaGFzRXF1aXRpZXM7XG5cdFx0Y29uc3Qgc3VnZ2VzdGlvbnMgPSBbXTtcblx0XHR0aGlzLml0ZW1zID0gW107XG5cdFx0aWYgKHRoaXMub3B0aW9ucy5jYXRlZ29yaWVzLmluY2x1ZGVzKCdjb25jZXB0cycpKSB7XG5cdFx0XHRzdWdnZXN0aW9ucy5wdXNoKHtcblx0XHRcdFx0aGVhZGluZzogaGVhZGluZ01hcHBpbmdbJ2NvbmNlcHRzJ10sXG5cdFx0XHRcdGxpbmtDbGFzc05hbWU6ICduLXRvcGljLXNlYXJjaF9fdGFyZ2V0LS1uZXdzJyxcblx0XHRcdFx0dHJhY2thYmxlOiAnbmV3cycsXG5cdFx0XHRcdHN1Z2dlc3Rpb25zOiB0aGlzLnN0YXRlLnN1Z2dlc3Rpb25zLmNvbmNlcHRzLnNsaWNlKDAsIERJU1BMQVlfSVRFTVMpXG5cdFx0XHRcdFx0Lm1hcChzdWdnZXN0aW9uID0+ICh7XG5cdFx0XHRcdFx0XHRodG1sOiB0aGlzLmhpZ2hsaWdodChzdWdnZXN0aW9uLnByZWZMYWJlbCksXG5cdFx0XHRcdFx0XHR1cmw6IHN1Z2dlc3Rpb24udXJsLFxuXHRcdFx0XHRcdFx0aWQ6IHN1Z2dlc3Rpb24uaWQsXG5cdFx0XHRcdFx0XHR0eXBlOiAndGFnJ1xuXHRcdFx0XHRcdH0pKSxcblx0XHRcdFx0dGFpbExpbms6IHRoaXMub3B0aW9ucy5pbmNsdWRlVmlld0FsbExpbmsgJiYge1xuXHRcdFx0XHRcdHVybDogYC9zZWFyY2g/cT0ke3RoaXMuc3RhdGUuc2VhcmNoVGVybX1gLFxuXHRcdFx0XHRcdGlubmVySHRtbDogYDxzcGFuPlNlZSBhbGwgbmV3cyBtYXRjaGluZyA8bWFyaz4ke3RoaXMuc3RhdGUuc2VhcmNoVGVybX08L21hcms+PC9zcGFuPmAsXG5cdFx0XHRcdFx0dHJhY2thYmxlOiAnc2VlLWFsbCdcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHR9XG5cblx0XHRpZiAodGhpcy5vcHRpb25zLmNhdGVnb3JpZXMuaW5jbHVkZXMoJ2VxdWl0aWVzJykpIHtcblx0XHRcdHN1Z2dlc3Rpb25zLnB1c2goe1xuXHRcdFx0XHRoZWFkaW5nOiBoZWFkaW5nTWFwcGluZ1snZXF1aXRpZXMnXSxcblx0XHRcdFx0dHJhY2thYmxlOiAnZXF1aXRpZXMnLFxuXHRcdFx0XHRsaW5rQ2xhc3NOYW1lOiAnbi10b3BpYy1zZWFyY2hfX3RhcmdldC0tZXF1aXRpZXMnLFxuXHRcdFx0XHRlbXB0eUh0bWw6ICc8ZGl2IGNsYXNzTmFtZT1cIm4tdG9waWMtc2VhcmNoX19uby1yZXN1bHRzLW1lc3NhZ2VcIj5ObyBlcXVpdGllcyBmb3VuZDwvZGl2PicsXG5cdFx0XHRcdHN1Z2dlc3Rpb25zOiB0aGlzLnN0YXRlLnN1Z2dlc3Rpb25zLmVxdWl0aWVzLnNsaWNlKDAsIERJU1BMQVlfSVRFTVMpXG5cdFx0XHRcdFx0Lm1hcChzdWdnZXN0aW9uID0+ICh7XG5cdFx0XHRcdFx0XHRodG1sOiBgPHNwYW4gY2xhc3M9XCJuLXRvcGljLXNlYXJjaF9fdGFyZ2V0X19lcXVpdHktbmFtZVwiPiR7dGhpcy5oaWdobGlnaHQoc3VnZ2VzdGlvbi5uYW1lKX08L3NwYW4+PGFiYnI+JHt0aGlzLmhpZ2hsaWdodChzdWdnZXN0aW9uLnN5bWJvbCl9PC9hYmJyPmAsXG5cdFx0XHRcdFx0XHR1cmw6IHN1Z2dlc3Rpb24udXJsLFxuXHRcdFx0XHRcdFx0aWQ6IHN1Z2dlc3Rpb24uc3ltYm9sLFxuXHRcdFx0XHRcdFx0dHlwZTogJ2VxdWl0eSdcblx0XHRcdFx0XHR9KSksXG5cdFx0XHRcdHRhaWxMaW5rOiB0aGlzLm9wdGlvbnMuaW5jbHVkZVZpZXdBbGxMaW5rICYmIHtcblx0XHRcdFx0XHR1cmw6IGBodHRwczovL21hcmtldHMuZnQuY29tL2RhdGEvc2VhcmNoP3F1ZXJ5PSR7dGhpcy5zdGF0ZS5zZWFyY2hUZXJtfWAsXG5cdFx0XHRcdFx0aW5uZXJIdG1sOiBgPHNwYW4+U2VlIGFsbCBxdW90ZXMgbWF0Y2hpbmcgPG1hcms+JHt0aGlzLnN0YXRlLnNlYXJjaFRlcm19PC9tYXJrPjwvc3Bhbj5gLFxuXHRcdFx0XHRcdHRyYWNrYWJsZTogJ3NlZS1hbGwnXG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH1cblx0XHR0aGlzLm5ld0h0bWwgPSBgXG5cdFx0XHQ8ZGl2IGFyaWEtbGl2ZT1cImFzc2VydGl2ZVwiPlxuXHRcdFx0XHQkeyBoYXNTdWdnZXN0aW9ucyA/IGA8ZGl2XG5cdFx0XHRcdFx0Y2xhc3M9XCJvLW5vcm1hbGlzZS12aXN1YWxseS1oaWRkZW4gbi10b3BpYy1zZWFyY2hfX3N1Z2dlc3Rpb25zX2V4cGxhbmF0aW9uXCI+XG5cdFx0XHRcdFx0U2VhcmNoIHJlc3VsdHMgaGF2ZSBiZWVuIGRpc3BsYXllZC4gVG8ganVtcCB0byB0aGUgbGlzdCBvZiBzdWdnZXN0aW9ucyBwcmVzcyB0aGUgZG93biBhcnJvdyBrZXkuXG5cdFx0XHRcdDwvZGl2PmAgOiAnJyB9XG5cdFx0XHRcdDxkaXZcblx0XHRcdFx0XHRjbGFzcz1cIm4tdG9waWMtc2VhcmNoIG4tdG9waWMtc2VhcmNoX19zdWdnZXN0aW9uc1wiXG5cdFx0XHRcdFx0JHsgaGFzU3VnZ2VzdGlvbnMgPyAnJyA6ICdoaWRkZW4nfVxuXHRcdFx0XHRcdGRhdGEtdHJhY2thYmxlPVwidHlwZWFoZWFkXCJcblx0XHRcdFx0PlxuXHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJvLW5vcm1hbGlzZS12aXN1YWxseS1oaWRkZW5cIj5TdWdnZXN0aW9ucyBpbmNsdWRlPC9kaXY+XG5cdFx0XHRcdFx0JHsgc3VnZ2VzdGlvbnMubWFwKHRoaXMucmVuZGVyU3VnZ2VzdGlvbkdyb3VwKS5qb2luKCcnKSB9XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0XHRgO1xuXHR9XG5cblx0aGFuZGxlU2VsZWN0aW9uIChlbCwgZXYpIHtcblx0XHRldi5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHQvLyB3ZSBkb24ndCBwcmV2ZW50IGRlZmF1bHQgYXMgdGhlIGxpbmsncyB1cmwgaXMgYSBsaW5rIHRvIHRoZSByZWxldmFudCBzdHJlYW0gcGFnZVxuXHRcdHJldHVybjtcblx0fVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3bf79137\n");

/***/ }),

/***/ "3c7622ff":
/*!**********************************************************!*\
  !*** ./node_modules/focus-visible/dist/focus-visible.js ***!
  \**********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n   true ? factory() : undefined;\n})(this, function () {\n  'use strict';\n\n  /**\n   * Applies the :focus-visible polyfill at the given scope.\n   * A scope in this case is either the top-level Document or a Shadow Root.\n   *\n   * @param {(Document|ShadowRoot)} scope\n   * @see https://github.com/WICG/focus-visible\n   */\n  function applyFocusVisiblePolyfill(scope) {\n    var hadKeyboardEvent = true;\n    var hadFocusVisibleRecently = false;\n    var hadFocusVisibleRecentlyTimeout = null;\n    var inputTypesAllowlist = {\n      text: true,\n      search: true,\n      url: true,\n      tel: true,\n      email: true,\n      password: true,\n      number: true,\n      date: true,\n      month: true,\n      week: true,\n      time: true,\n      datetime: true,\n      'datetime-local': true\n    };\n\n    /**\n     * Helper function for legacy browsers and iframes which sometimes focus\n     * elements like document, body, and non-interactive SVG.\n     * @param {Element} el\n     */\n    function isValidFocusTarget(el) {\n      if (el && el !== document && el.nodeName !== 'HTML' && el.nodeName !== 'BODY' && 'classList' in el && 'contains' in el.classList) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Computes whether the given element should automatically trigger the\n     * `focus-visible` class being added, i.e. whether it should always match\n     * `:focus-visible` when focused.\n     * @param {Element} el\n     * @return {boolean}\n     */\n    function focusTriggersKeyboardModality(el) {\n      var type = el.type;\n      var tagName = el.tagName;\n      if (tagName === 'INPUT' && inputTypesAllowlist[type] && !el.readOnly) {\n        return true;\n      }\n      if (tagName === 'TEXTAREA' && !el.readOnly) {\n        return true;\n      }\n      if (el.isContentEditable) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Add the `focus-visible` class to the given element if it was not added by\n     * the author.\n     * @param {Element} el\n     */\n    function addFocusVisibleClass(el) {\n      if (el.classList.contains('focus-visible')) {\n        return;\n      }\n      el.classList.add('focus-visible');\n      el.setAttribute('data-focus-visible-added', '');\n    }\n\n    /**\n     * Remove the `focus-visible` class from the given element if it was not\n     * originally added by the author.\n     * @param {Element} el\n     */\n    function removeFocusVisibleClass(el) {\n      if (!el.hasAttribute('data-focus-visible-added')) {\n        return;\n      }\n      el.classList.remove('focus-visible');\n      el.removeAttribute('data-focus-visible-added');\n    }\n\n    /**\n     * If the most recent user interaction was via the keyboard;\n     * and the key press did not include a meta, alt/option, or control key;\n     * then the modality is keyboard. Otherwise, the modality is not keyboard.\n     * Apply `focus-visible` to any current active element and keep track\n     * of our keyboard modality state with `hadKeyboardEvent`.\n     * @param {KeyboardEvent} e\n     */\n    function onKeyDown(e) {\n      if (e.metaKey || e.altKey || e.ctrlKey) {\n        return;\n      }\n      if (isValidFocusTarget(scope.activeElement)) {\n        addFocusVisibleClass(scope.activeElement);\n      }\n      hadKeyboardEvent = true;\n    }\n\n    /**\n     * If at any point a user clicks with a pointing device, ensure that we change\n     * the modality away from keyboard.\n     * This avoids the situation where a user presses a key on an already focused\n     * element, and then clicks on a different element, focusing it with a\n     * pointing device, while we still think we're in keyboard modality.\n     * @param {Event} e\n     */\n    function onPointerDown(e) {\n      hadKeyboardEvent = false;\n    }\n\n    /**\n     * On `focus`, add the `focus-visible` class to the target if:\n     * - the target received focus as a result of keyboard navigation, or\n     * - the event target is an element that will likely require interaction\n     *   via the keyboard (e.g. a text box)\n     * @param {Event} e\n     */\n    function onFocus(e) {\n      // Prevent IE from focusing the document or HTML element.\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n      if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {\n        addFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * On `blur`, remove the `focus-visible` class from the target.\n     * @param {Event} e\n     */\n    function onBlur(e) {\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n      if (e.target.classList.contains('focus-visible') || e.target.hasAttribute('data-focus-visible-added')) {\n        // To detect a tab/window switch, we look for a blur event followed\n        // rapidly by a visibility change.\n        // If we don't see a visibility change within 100ms, it's probably a\n        // regular focus change.\n        hadFocusVisibleRecently = true;\n        window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n        hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n          hadFocusVisibleRecently = false;\n        }, 100);\n        removeFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * If the user changes tabs, keep track of whether or not the previously\n     * focused element had .focus-visible.\n     * @param {Event} e\n     */\n    function onVisibilityChange(e) {\n      if (document.visibilityState === 'hidden') {\n        // If the tab becomes active again, the browser will handle calling focus\n        // on the element (Safari actually calls it twice).\n        // If this tab change caused a blur on an element with focus-visible,\n        // re-apply the class when the user switches back to the tab.\n        if (hadFocusVisibleRecently) {\n          hadKeyboardEvent = true;\n        }\n        addInitialPointerMoveListeners();\n      }\n    }\n\n    /**\n     * Add a group of listeners to detect usage of any pointing devices.\n     * These listeners will be added when the polyfill first loads, and anytime\n     * the window is blurred, so that they are active when the window regains\n     * focus.\n     */\n    function addInitialPointerMoveListeners() {\n      document.addEventListener('mousemove', onInitialPointerMove);\n      document.addEventListener('mousedown', onInitialPointerMove);\n      document.addEventListener('mouseup', onInitialPointerMove);\n      document.addEventListener('pointermove', onInitialPointerMove);\n      document.addEventListener('pointerdown', onInitialPointerMove);\n      document.addEventListener('pointerup', onInitialPointerMove);\n      document.addEventListener('touchmove', onInitialPointerMove);\n      document.addEventListener('touchstart', onInitialPointerMove);\n      document.addEventListener('touchend', onInitialPointerMove);\n    }\n    function removeInitialPointerMoveListeners() {\n      document.removeEventListener('mousemove', onInitialPointerMove);\n      document.removeEventListener('mousedown', onInitialPointerMove);\n      document.removeEventListener('mouseup', onInitialPointerMove);\n      document.removeEventListener('pointermove', onInitialPointerMove);\n      document.removeEventListener('pointerdown', onInitialPointerMove);\n      document.removeEventListener('pointerup', onInitialPointerMove);\n      document.removeEventListener('touchmove', onInitialPointerMove);\n      document.removeEventListener('touchstart', onInitialPointerMove);\n      document.removeEventListener('touchend', onInitialPointerMove);\n    }\n\n    /**\n     * When the polfyill first loads, assume the user is in keyboard modality.\n     * If any event is received from a pointing device (e.g. mouse, pointer,\n     * touch), turn off keyboard modality.\n     * This accounts for situations where focus enters the page from the URL bar.\n     * @param {Event} e\n     */\n    function onInitialPointerMove(e) {\n      // Work around a Safari quirk that fires a mousemove on <html> whenever the\n      // window blurs, even if you're tabbing out of the page. ¯\\_(ツ)_/¯\n      if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') {\n        return;\n      }\n      hadKeyboardEvent = false;\n      removeInitialPointerMoveListeners();\n    }\n\n    // For some kinds of state, we are interested in changes at the global scope\n    // only. For example, global pointer input, global key presses and global\n    // visibility change should affect the state at every scope:\n    document.addEventListener('keydown', onKeyDown, true);\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('pointerdown', onPointerDown, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('visibilitychange', onVisibilityChange, true);\n    addInitialPointerMoveListeners();\n\n    // For focus and blur, we specifically care about state changes in the local\n    // scope. This is because focus / blur events that originate from within a\n    // shadow root are not re-dispatched from the host element if it was already\n    // the active element in its own scope:\n    scope.addEventListener('focus', onFocus, true);\n    scope.addEventListener('blur', onBlur, true);\n\n    // We detect that a node is a ShadowRoot by ensuring that it is a\n    // DocumentFragment and also has a host property. This check covers native\n    // implementation and polyfill implementation transparently. If we only cared\n    // about the native implementation, we could just check if the scope was\n    // an instance of a ShadowRoot.\n    if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) {\n      // Since a ShadowRoot is a special kind of DocumentFragment, it does not\n      // have a root element to add a class to. So, we add this attribute to the\n      // host element instead:\n      scope.host.setAttribute('data-js-focus-visible', '');\n    } else if (scope.nodeType === Node.DOCUMENT_NODE) {\n      document.documentElement.classList.add('js-focus-visible');\n      document.documentElement.setAttribute('data-js-focus-visible', '');\n    }\n  }\n\n  // It is important to wrap all references to global window and document in\n  // these checks to support server-side rendering use cases\n  // @see https://github.com/WICG/focus-visible/issues/199\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    // Make the polyfill helper globally available. This can be used as a signal\n    // to interested libraries that wish to coordinate with the polyfill for e.g.,\n    // applying the polyfill to a shadow root:\n    window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill;\n\n    // Notify interested libraries of the polyfill's presence, in case the\n    // polyfill was loaded lazily:\n    var event;\n    try {\n      event = new CustomEvent('focus-visible-polyfill-ready');\n    } catch (error) {\n      // IE11 does not support using CustomEvent as a constructor directly:\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent('focus-visible-polyfill-ready', false, false, {});\n    }\n    window.dispatchEvent(event);\n  }\n  if (typeof document !== 'undefined') {\n    // Apply the polyfill to the global document, so that no JavaScript\n    // coordination is required to use the polyfill in the top-level document:\n    applyFocusVisiblePolyfill(document);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3c7622ff\n");

/***/ }),

/***/ "7d23ec59":
/*!*******************************************************!*\
  !*** ./node_modules/n-ui-foundations/js/perf-mark.js ***!
  \*******************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("module.exports = name => {\n  const performance = window.LUX || window.performance || window.msPerformance || window.webkitPerformance || window.mozPerformance;\n  if (performance && performance.mark) {\n    performance.mark(name);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiN2QyM2VjNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbi11aS1mb3VuZGF0aW9ucy9qcy9wZXJmLW1hcmsuanM/MGYyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IG5hbWUgPT4ge1xuXHRjb25zdCBwZXJmb3JtYW5jZSA9IHdpbmRvdy5MVVggfHwgd2luZG93LnBlcmZvcm1hbmNlIHx8IHdpbmRvdy5tc1BlcmZvcm1hbmNlIHx8IHdpbmRvdy53ZWJraXRQZXJmb3JtYW5jZSB8fCB3aW5kb3cubW96UGVyZm9ybWFuY2U7XG5cdGlmIChwZXJmb3JtYW5jZSAmJiBwZXJmb3JtYW5jZS5tYXJrKSB7XG5cdFx0cGVyZm9ybWFuY2UubWFyayhuYW1lKTtcblx0fVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7d23ec59\n");

/***/ }),

/***/ "8b3ea372":
/*!******************************************************!*\
  !*** ./node_modules/n-ui-foundations/js/to-ascii.js ***!
  \******************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("const mapASCII = {\n  'à': 'a',\n  'á': 'a',\n  'â': 'a',\n  'ä': 'a',\n  'ã': 'a',\n  'å': 'a',\n  'ā': 'a',\n  'æ': 'ae',\n  'ç': 'c',\n  'č': 'c',\n  'è': 'e',\n  'é': 'e',\n  'ê': 'e',\n  'ë': 'e',\n  'ē': 'e',\n  'ğ': 'g',\n  'î': 'i',\n  'ï': 'i',\n  'í': 'i',\n  'ì': 'i',\n  'ī': 'i',\n  'ł': 'l',\n  'ñ': 'n',\n  'ń': 'n',\n  'ô': 'o',\n  'ö': 'o',\n  'ò': 'o',\n  'ó': 'o',\n  'ø': 'o',\n  'õ': 'o',\n  'ō': 'o',\n  'œ': 'oe',\n  'ş': 's',\n  'ș': 's',\n  'š': 's',\n  'ß': 'ss',\n  'û': 'u',\n  'ü': 'u',\n  'ù': 'u',\n  'ú': 'u',\n  'ū': 'u',\n  'ž': 'z'\n};\nconst nonASCII = /[^\\x00-\\x7F]+/;\nfunction toASCII(string) {\n  if (nonASCII.test(string) === false) {\n    return string;\n  }\n  let i = string.length;\n  while (i > -1) {\n    const ascii = mapASCII[string[i]];\n    if (ascii) {\n      string = string.substr(0, i) + ascii + string.substr(i + 1);\n    }\n    i--;\n  }\n  return string;\n}\nmodule.exports = toASCII;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOGIzZWEzNzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbi11aS1mb3VuZGF0aW9ucy9qcy90by1hc2NpaS5qcz84NjgwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1hcEFTQ0lJID0ge1xuXHQnw6AnOiAnYScsXG5cdCfDoSc6ICdhJyxcblx0J8OiJzogJ2EnLFxuXHQnw6QnOiAnYScsXG5cdCfDoyc6ICdhJyxcblx0J8OlJzogJ2EnLFxuXHQnxIEnOiAnYScsXG5cdCfDpic6ICdhZScsXG5cdCfDpyc6ICdjJyxcblx0J8SNJzogJ2MnLFxuXHQnw6gnOiAnZScsXG5cdCfDqSc6ICdlJyxcblx0J8OqJzogJ2UnLFxuXHQnw6snOiAnZScsXG5cdCfEkyc6ICdlJyxcblx0J8SfJzogJ2cnLFxuXHQnw64nOiAnaScsXG5cdCfDryc6ICdpJyxcblx0J8OtJzogJ2knLFxuXHQnw6wnOiAnaScsXG5cdCfEqyc6ICdpJyxcblx0J8WCJzogJ2wnLFxuXHQnw7EnOiAnbicsXG5cdCfFhCc6ICduJyxcblx0J8O0JzogJ28nLFxuXHQnw7YnOiAnbycsXG5cdCfDsic6ICdvJyxcblx0J8OzJzogJ28nLFxuXHQnw7gnOiAnbycsXG5cdCfDtSc6ICdvJyxcblx0J8WNJzogJ28nLFxuXHQnxZMnOiAnb2UnLFxuXHQnxZ8nOiAncycsXG5cdCfImSc6ICdzJyxcblx0J8WhJzogJ3MnLFxuXHQnw58nOiAnc3MnLFxuXHQnw7snOiAndScsXG5cdCfDvCc6ICd1Jyxcblx0J8O5JzogJ3UnLFxuXHQnw7onOiAndScsXG5cdCfFqyc6ICd1Jyxcblx0J8W+JzogJ3onXG59O1xuXG5jb25zdCBub25BU0NJSSA9IC9bXlxceDAwLVxceDdGXSsvO1xuXG5mdW5jdGlvbiB0b0FTQ0lJIChzdHJpbmcpIHtcblx0aWYgKG5vbkFTQ0lJLnRlc3Qoc3RyaW5nKSA9PT0gZmFsc2UpIHtcblx0XHRyZXR1cm4gc3RyaW5nO1xuXHR9XG5cblx0bGV0IGkgPSBzdHJpbmcubGVuZ3RoO1xuXG5cdHdoaWxlIChpID4gLTEpIHtcblx0XHRjb25zdCBhc2NpaSA9IG1hcEFTQ0lJW3N0cmluZ1tpXV07XG5cblx0XHRpZiAoYXNjaWkpIHtcblx0XHRcdHN0cmluZyA9IHN0cmluZy5zdWJzdHIoMCwgaSkgKyBhc2NpaSArIHN0cmluZy5zdWJzdHIoaSArIDEpO1xuXHRcdH1cblxuXHRcdGktLTtcblx0fVxuXG5cdHJldHVybiBzdHJpbmc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdG9BU0NJSTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8b3ea372\n");

/***/ }),

/***/ "ae05e6f9":
/*!*****************************************************!*\
  !*** ./node_modules/n-ui-foundations/js/cookies.js ***!
  \*****************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("//TODO we may want to replace this with https://github.com/WICG/async-cookies-api at some point in the future\n\n// Regex taken from https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie don't ask me how it works\nfunction getRegexForName(name) {\n  return new RegExp(`(?:(?:^|.*;\\\\s*)${name}\\\\s*\\=\\\\s*([^;]*).*$)|^.*$`);\n}\nfunction getOptions(options) {\n  return Object.keys(options).map(key => {\n    let newKey = key;\n    if (key === 'maxAge') {\n      newKey = 'max-age';\n    }\n    if (options[key] instanceof Date) {\n      options[key] = options[key].toUTCString();\n    }\n    return `${newKey}=${options[key]}`;\n  });\n}\nfunction set(name, value) {\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const options = getOptions(opts).join('; ');\n  const cookie = `${encodeURIComponent(name)}=${encodeURIComponent(value)}; ${options}`;\n  document.cookie = cookie;\n}\nfunction get(name) {\n  return decodeURIComponent(document.cookie.replace(getRegexForName(encodeURIComponent(name)), '$1'));\n}\nfunction has(name) {\n  return new RegExp(encodeURIComponent(name) + '=').test(document.cookie);\n}\nfunction remove(name) {\n  return set(name, '', {\n    expires: new Date(0)\n  });\n}\nmodule.exports = {\n  get,\n  set,\n  has,\n  getRegexForName,\n  remove\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWUwNWU2ZjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbi11aS1mb3VuZGF0aW9ucy9qcy9jb29raWVzLmpzP2M1YzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy9UT0RPIHdlIG1heSB3YW50IHRvIHJlcGxhY2UgdGhpcyB3aXRoIGh0dHBzOi8vZ2l0aHViLmNvbS9XSUNHL2FzeW5jLWNvb2tpZXMtYXBpIGF0IHNvbWUgcG9pbnQgaW4gdGhlIGZ1dHVyZVxuXG4vLyBSZWdleCB0YWtlbiBmcm9tIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9Eb2N1bWVudC9jb29raWUgZG9uJ3QgYXNrIG1lIGhvdyBpdCB3b3Jrc1xuZnVuY3Rpb24gZ2V0UmVnZXhGb3JOYW1lIChuYW1lKXtcblx0cmV0dXJuIG5ldyBSZWdFeHAoYCg/Oig/Ol58Lio7XFxcXHMqKSR7bmFtZX1cXFxccypcXD1cXFxccyooW147XSopLiokKXxeLiokYCk7XG59XG5cbmZ1bmN0aW9uIGdldE9wdGlvbnMgKG9wdGlvbnMpe1xuXHRyZXR1cm4gT2JqZWN0LmtleXMob3B0aW9ucykubWFwKGtleSA9PiB7XG5cdFx0bGV0IG5ld0tleSA9IGtleTtcblx0XHRpZihrZXkgPT09ICdtYXhBZ2UnKXtcblx0XHRcdG5ld0tleSA9ICdtYXgtYWdlJztcblx0XHR9XG5cblx0XHRpZihvcHRpb25zW2tleV0gaW5zdGFuY2VvZiBEYXRlKXtcblx0XHRcdG9wdGlvbnNba2V5XSA9IG9wdGlvbnNba2V5XS50b1VUQ1N0cmluZygpO1xuXHRcdH1cblxuXHRcdHJldHVybiBgJHtuZXdLZXl9PSR7b3B0aW9uc1trZXldfWA7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBzZXQgKG5hbWUsIHZhbHVlLCBvcHRzID0ge30pe1xuXHRjb25zdCBvcHRpb25zID0gZ2V0T3B0aW9ucyhvcHRzKS5qb2luKCc7ICcpO1xuXHRjb25zdCBjb29raWUgPSBgJHtlbmNvZGVVUklDb21wb25lbnQobmFtZSl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKX07ICR7b3B0aW9uc31gO1xuXHRkb2N1bWVudC5jb29raWUgPSBjb29raWU7XG59XG5cbmZ1bmN0aW9uIGdldCAobmFtZSl7XG5cdHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoZG9jdW1lbnQuY29va2llLnJlcGxhY2UoZ2V0UmVnZXhGb3JOYW1lKGVuY29kZVVSSUNvbXBvbmVudChuYW1lKSksICckMScpKTtcbn1cblxuZnVuY3Rpb24gaGFzIChuYW1lKXtcblx0cmV0dXJuIG5ldyBSZWdFeHAoZW5jb2RlVVJJQ29tcG9uZW50KG5hbWUpICsgJz0nKS50ZXN0KGRvY3VtZW50LmNvb2tpZSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZSAobmFtZSl7XG5cdHJldHVybiBzZXQobmFtZSwgJycsIHtleHBpcmVzOm5ldyBEYXRlKDApfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge2dldCwgc2V0LCBoYXMsIGdldFJlZ2V4Rm9yTmFtZSwgcmVtb3ZlfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///ae05e6f9\n");

/***/ }),

/***/ "ae50df7e":
/*!********************************************************************!*\
  !*** ./node_modules/n-topic-search/src/renderers/base-renderer.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BaseRenderer; });\n/* harmony import */ var morphdom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! morphdom */ \"f5ad1795\");\n\nfunction regExpEscape(s) {\n  return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\nclass BaseRenderer {\n  constructor(container, options) {\n    this.container = container;\n    // ensure there is a dom node that morphdom can act on\n    this.container.appendChild(document.createElement('div'));\n    this.options = options;\n    this.state = {\n      suggestions: options.categories.reduce((containers, name) => {\n        containers[name] = [];\n        return containers;\n      }, {})\n    };\n  }\n  setState(state) {\n    this.state = state;\n    this.createHtml();\n    this.render();\n  }\n  highlight(text) {\n    return text.replace(RegExp(regExpEscape(this.state.searchTerm), 'gi'), '<mark>$&</mark>');\n  }\n  render() {\n    if (this.container.innerHTML.trim()) {\n      // empty the suggestions div first to prevent\n      // screen readers reading the old suggestions\n      const empty = document.createElement('div');\n      const suggestions = this.container.querySelector('.n-topic-search__suggestions');\n      if (suggestions) {\n        Object(morphdom__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(suggestions, empty);\n      }\n      const frag = document.createDocumentFragment();\n      frag.appendChild(document.createElement('div'));\n      frag.firstChild.insertAdjacentHTML('beforeend', this.newHtml);\n      Object(morphdom__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.container.firstChild, frag.firstChild);\n    } else {\n      this.container.innerHTML = this.newHtml;\n    }\n    this.newHtml = '';\n  }\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWU1MGRmN2UuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbi10b3BpYy1zZWFyY2gvc3JjL3JlbmRlcmVycy9iYXNlLXJlbmRlcmVyLmpzPzRmMDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vcnBoZG9tIGZyb20gJ21vcnBoZG9tJztcblxuZnVuY3Rpb24gcmVnRXhwRXNjYXBlIChzKSB7XG5cdHJldHVybiBzLnJlcGxhY2UoL1stXFxcXF4kKis/LigpfFtcXF17fV0vZywgJ1xcXFwkJicpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYXNlUmVuZGVyZXIge1xuXHRjb25zdHJ1Y3RvciAoY29udGFpbmVyLCBvcHRpb25zKSB7XG5cdFx0dGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG5cdFx0Ly8gZW5zdXJlIHRoZXJlIGlzIGEgZG9tIG5vZGUgdGhhdCBtb3JwaGRvbSBjYW4gYWN0IG9uXG5cdFx0dGhpcy5jb250YWluZXIuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykpO1xuXHRcdHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cblx0XHR0aGlzLnN0YXRlID0ge1xuXHRcdFx0c3VnZ2VzdGlvbnM6IG9wdGlvbnMuY2F0ZWdvcmllcy5yZWR1Y2UoKGNvbnRhaW5lcnMsIG5hbWUpID0+IHtcblx0XHRcdFx0Y29udGFpbmVyc1tuYW1lXSA9IFtdO1xuXHRcdFx0XHRyZXR1cm4gY29udGFpbmVycztcblx0XHRcdH0sIHt9KVxuXHRcdH07XG5cdH1cblxuXHRzZXRTdGF0ZSAoc3RhdGUpIHtcblx0XHR0aGlzLnN0YXRlID0gc3RhdGU7XG5cdFx0dGhpcy5jcmVhdGVIdG1sKCk7XG5cdFx0dGhpcy5yZW5kZXIoKTtcblx0fVxuXG5cdGhpZ2hsaWdodCAodGV4dCkge1xuXHRcdHJldHVybiB0ZXh0LnJlcGxhY2UoUmVnRXhwKHJlZ0V4cEVzY2FwZSh0aGlzLnN0YXRlLnNlYXJjaFRlcm0pLCAnZ2knKSwgJzxtYXJrPiQmPC9tYXJrPicpO1xuXHR9XG5cblx0cmVuZGVyICgpIHtcblx0XHRpZiAodGhpcy5jb250YWluZXIuaW5uZXJIVE1MLnRyaW0oKSkge1xuXHRcdFx0Ly8gZW1wdHkgdGhlIHN1Z2dlc3Rpb25zIGRpdiBmaXJzdCB0byBwcmV2ZW50XG5cdFx0XHQvLyBzY3JlZW4gcmVhZGVycyByZWFkaW5nIHRoZSBvbGQgc3VnZ2VzdGlvbnNcblx0XHRcdGNvbnN0IGVtcHR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRjb25zdCBzdWdnZXN0aW9ucyA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5uLXRvcGljLXNlYXJjaF9fc3VnZ2VzdGlvbnMnKTtcblx0XHRcdGlmIChzdWdnZXN0aW9ucykge1xuXHRcdFx0XHRtb3JwaGRvbShzdWdnZXN0aW9ucywgZW1wdHkpO1xuXHRcdFx0fVxuXG5cdFx0XHRjb25zdCBmcmFnID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuXHRcdFx0ZnJhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSk7XG5cdFx0XHRmcmFnLmZpcnN0Q2hpbGQuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCB0aGlzLm5ld0h0bWwpO1xuXG5cdFx0XHRtb3JwaGRvbSh0aGlzLmNvbnRhaW5lci5maXJzdENoaWxkLCBmcmFnLmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLmNvbnRhaW5lci5pbm5lckhUTUwgPSB0aGlzLm5ld0h0bWw7XG5cdFx0fVxuXHRcdHRoaXMubmV3SHRtbCA9ICcnO1xuXHR9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///ae50df7e\n");

/***/ }),

/***/ "b4722769":
/*!*********************************************************!*\
  !*** ./node_modules/ready-state/dist/ready-state.es.js ***!
  \*********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loading\", function() { return r; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"interactive\", function() { return o; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"complete\", function() { return u; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"domready\", function() { return i; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"load\", function() { return c; });\nvar e = {\n    capture: !0,\n    once: !0,\n    passive: !0\n  },\n  t = function () {\n    return \"interactive\" === document.readyState || \"complete\" === document.readyState;\n  },\n  n = function (e, n) {\n    return !(!function (e) {\n      return document.readyState === e;\n    }(e) && !t()) && (n(e), !0);\n  },\n  r = function () {\n    return new Promise(function (t) {\n      n(\"loading\", t) || document.addEventListener(\"readystatechange\", function () {\n        \"loading\" === document.readyState && t(\"loading\");\n      }, e);\n    });\n  },\n  o = function () {\n    return new Promise(function (t) {\n      n(\"interactive\", t) || document.addEventListener(\"readystatechange\", function () {\n        \"interactive\" === document.readyState && t(\"interactive\");\n      }, e);\n    });\n  },\n  u = function () {\n    return new Promise(function (t) {\n      n(\"complete\", t) || document.addEventListener(\"readystatechange\", function () {\n        \"complete\" === document.readyState && t(\"complete\");\n      }, e);\n    });\n  },\n  i = function () {\n    return new Promise(function (t) {\n      n(\"domready\", t) || document.addEventListener(\"DOMContentLoaded\", function () {\n        t(\"domready\");\n      }, e);\n    });\n  },\n  c = function () {\n    return new Promise(function (t) {\n      n(\"load\", t) || window.addEventListener(\"load\", function () {\n        t(\"load\");\n      }, e);\n    });\n  },\n  d = {};\nObject.defineProperties(d, {\n  state: {\n    get: function () {\n      return document.readyState;\n    }\n  },\n  loading: {\n    get: function () {\n      return r();\n    }\n  },\n  interactive: {\n    get: function () {\n      return o();\n    }\n  },\n  complete: {\n    get: function () {\n      return u();\n    }\n  },\n  window: {\n    get: function () {\n      return c();\n    }\n  },\n  load: {\n    get: function () {\n      return c();\n    }\n  },\n  domready: {\n    get: function () {\n      return i();\n    }\n  },\n  dom: {\n    get: function () {\n      return i();\n    }\n  },\n  ready: {\n    get: function () {\n      return t();\n    }\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (d);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjQ3MjI3NjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZHktc3RhdGUvZGlzdC9yZWFkeS1zdGF0ZS5lcy5qcz8yMGQ2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBlPXtjYXB0dXJlOiEwLG9uY2U6ITAscGFzc2l2ZTohMH0sdD1mdW5jdGlvbigpe3JldHVyblwiaW50ZXJhY3RpdmVcIj09PWRvY3VtZW50LnJlYWR5U3RhdGV8fFwiY29tcGxldGVcIj09PWRvY3VtZW50LnJlYWR5U3RhdGV9LG49ZnVuY3Rpb24oZSxuKXtyZXR1cm4hKCFmdW5jdGlvbihlKXtyZXR1cm4gZG9jdW1lbnQucmVhZHlTdGF0ZT09PWV9KGUpJiYhdCgpKSYmKG4oZSksITApfSxyPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpe24oXCJsb2FkaW5nXCIsdCl8fGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJyZWFkeXN0YXRlY2hhbmdlXCIsZnVuY3Rpb24oKXtcImxvYWRpbmdcIj09PWRvY3VtZW50LnJlYWR5U3RhdGUmJnQoXCJsb2FkaW5nXCIpfSxlKX0pfSxvPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpe24oXCJpbnRlcmFjdGl2ZVwiLHQpfHxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwicmVhZHlzdGF0ZWNoYW5nZVwiLGZ1bmN0aW9uKCl7XCJpbnRlcmFjdGl2ZVwiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZSYmdChcImludGVyYWN0aXZlXCIpfSxlKX0pfSx1PWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpe24oXCJjb21wbGV0ZVwiLHQpfHxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwicmVhZHlzdGF0ZWNoYW5nZVwiLGZ1bmN0aW9uKCl7XCJjb21wbGV0ZVwiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZSYmdChcImNvbXBsZXRlXCIpfSxlKX0pfSxpPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpe24oXCJkb21yZWFkeVwiLHQpfHxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLGZ1bmN0aW9uKCl7dChcImRvbXJlYWR5XCIpfSxlKX0pfSxjPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpe24oXCJsb2FkXCIsdCl8fHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLGZ1bmN0aW9uKCl7dChcImxvYWRcIil9LGUpfSl9LGQ9e307T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZCx7c3RhdGU6e2dldDpmdW5jdGlvbigpe3JldHVybiBkb2N1bWVudC5yZWFkeVN0YXRlfX0sbG9hZGluZzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHIoKX19LGludGVyYWN0aXZlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbygpfX0sY29tcGxldGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB1KCl9fSx3aW5kb3c6e2dldDpmdW5jdGlvbigpe3JldHVybiBjKCl9fSxsb2FkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYygpfX0sZG9tcmVhZHk6e2dldDpmdW5jdGlvbigpe3JldHVybiBpKCl9fSxkb206e2dldDpmdW5jdGlvbigpe3JldHVybiBpKCl9fSxyZWFkeTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQoKX19fSk7ZXhwb3J0IGRlZmF1bHQgZDtleHBvcnR7ciBhcyBsb2FkaW5nLG8gYXMgaW50ZXJhY3RpdmUsdSBhcyBjb21wbGV0ZSxpIGFzIGRvbXJlYWR5LGMgYXMgbG9hZH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFkeS1zdGF0ZS5lcy5qcy5tYXBcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///b4722769\n");

/***/ }),

/***/ "e6b19cd3":
/*!********************************************!*\
  !*** ./node_modules/ftdomdelegate/main.js ***!
  \********************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * DOM event delegator\n *\n * The delegator will listen\n * for events that bubble up\n * to the root node.\n *\n * @constructor\n * @param {Node|string} [root] The root node or a selector string matching the root node\n */\nfunction Delegate(root) {\n  /**\n   * Maintain a map of listener\n   * lists, keyed by event name.\n   *\n   * @type Object\n   */\n  this.listenerMap = [{}, {}];\n  if (root) {\n    this.root(root);\n  }\n\n  /** @type function() */\n  this.handle = Delegate.prototype.handle.bind(this);\n\n  // Cache of event listeners removed during an event cycle\n  this._removedListeners = [];\n}\n\n/**\n * Start listening for events\n * on the provided DOM element\n *\n * @param  {Node|string} [root] The root node or a selector string matching the root node\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.root = function (root) {\n  const listenerMap = this.listenerMap;\n  let eventType;\n\n  // Remove master event listeners\n  if (this.rootElement) {\n    for (eventType in listenerMap[1]) {\n      if (listenerMap[1].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, true);\n      }\n    }\n    for (eventType in listenerMap[0]) {\n      if (listenerMap[0].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, false);\n      }\n    }\n  }\n\n  // If no root or root is not\n  // a dom node, then remove internal\n  // root reference and exit here\n  if (!root || !root.addEventListener) {\n    if (this.rootElement) {\n      delete this.rootElement;\n    }\n    return this;\n  }\n\n  /**\n   * The root node at which\n   * listeners are attached.\n   *\n   * @type Node\n   */\n  this.rootElement = root;\n\n  // Set up master event listeners\n  for (eventType in listenerMap[1]) {\n    if (listenerMap[1].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, true);\n    }\n  }\n  for (eventType in listenerMap[0]) {\n    if (listenerMap[0].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, false);\n    }\n  }\n  return this;\n};\n\n/**\n * @param {string} eventType\n * @returns boolean\n */\nDelegate.prototype.captureForType = function (eventType) {\n  return ['blur', 'error', 'focus', 'load', 'resize', 'scroll'].indexOf(eventType) !== -1;\n};\n\n/**\n * Attach a handler to one\n * event for all elements\n * that match the selector,\n * now or in the future\n *\n * The handler function receives\n * three arguments: the DOM event\n * object, the node that matched\n * the selector while the event\n * was bubbling and a reference\n * to itself. Within the handler,\n * 'this' is equal to the second\n * argument.\n *\n * The node that actually received\n * the event can be accessed via\n * 'event.target'.\n *\n * @param {string} eventType Listen for these events\n * @param {string|undefined} selector Only handle events on elements matching this selector, if undefined match root element\n * @param {function()} handler Handler function - event data passed here will be in event.data\n * @param {boolean} [useCapture] see 'useCapture' in <https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener>\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.on = function (eventType, selector, handler, useCapture) {\n  let root;\n  let listenerMap;\n  let matcher;\n  let matcherParam;\n  if (!eventType) {\n    throw new TypeError('Invalid event type: ' + eventType);\n  }\n\n  // handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // Fallback to sensible defaults\n  // if useCapture not set\n  if (useCapture === undefined) {\n    useCapture = this.captureForType(eventType);\n  }\n  if (typeof handler !== 'function') {\n    throw new TypeError('Handler must be a type of Function');\n  }\n  root = this.rootElement;\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n\n  // Add master handler for type if not created yet\n  if (!listenerMap[eventType]) {\n    if (root) {\n      root.addEventListener(eventType, this.handle, useCapture);\n    }\n    listenerMap[eventType] = [];\n  }\n  if (!selector) {\n    matcherParam = null;\n\n    // COMPLEX - matchesRoot needs to have access to\n    // this.rootElement, so bind the function to this.\n    matcher = matchesRoot.bind(this);\n\n    // Compile a matcher for the given selector\n  } else if (/^[a-z]+$/i.test(selector)) {\n    matcherParam = selector;\n    matcher = matchesTag;\n  } else if (/^#[a-z0-9\\-_]+$/i.test(selector)) {\n    matcherParam = selector.slice(1);\n    matcher = matchesId;\n  } else {\n    matcherParam = selector;\n    matcher = Element.prototype.matches;\n  }\n\n  // Add to the list of listeners\n  listenerMap[eventType].push({\n    selector: selector,\n    handler: handler,\n    matcher: matcher,\n    matcherParam: matcherParam\n  });\n  return this;\n};\n\n/**\n * Remove an event handler\n * for elements that match\n * the selector, forever\n *\n * @param {string} [eventType] Remove handlers for events matching this type, considering the other parameters\n * @param {string} [selector] If this parameter is omitted, only handlers which match the other two will be removed\n * @param {function()} [handler] If this parameter is omitted, only handlers which match the previous two will be removed\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.off = function (eventType, selector, handler, useCapture) {\n  let i;\n  let listener;\n  let listenerMap;\n  let listenerList;\n  let singleEventType;\n\n  // Handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // If useCapture not set, remove\n  // all event listeners\n  if (useCapture === undefined) {\n    this.off(eventType, selector, handler, true);\n    this.off(eventType, selector, handler, false);\n    return this;\n  }\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n  if (!eventType) {\n    for (singleEventType in listenerMap) {\n      if (listenerMap.hasOwnProperty(singleEventType)) {\n        this.off(singleEventType, selector, handler);\n      }\n    }\n    return this;\n  }\n  listenerList = listenerMap[eventType];\n  if (!listenerList || !listenerList.length) {\n    return this;\n  }\n\n  // Remove only parameter matches\n  // if specified\n  for (i = listenerList.length - 1; i >= 0; i--) {\n    listener = listenerList[i];\n    if ((!selector || selector === listener.selector) && (!handler || handler === listener.handler)) {\n      this._removedListeners.push(listener);\n      listenerList.splice(i, 1);\n    }\n  }\n\n  // All listeners removed\n  if (!listenerList.length) {\n    delete listenerMap[eventType];\n\n    // Remove the main handler\n    if (this.rootElement) {\n      this.rootElement.removeEventListener(eventType, this.handle, useCapture);\n    }\n  }\n  return this;\n};\n\n/**\n * Handle an arbitrary event.\n *\n * @param {Event} event\n */\nDelegate.prototype.handle = function (event) {\n  let i;\n  let l;\n  const type = event.type;\n  let root;\n  let phase;\n  let listener;\n  let returned;\n  let listenerList = [];\n  let target;\n  const eventIgnore = 'ftLabsDelegateIgnore';\n  if (event[eventIgnore] === true) {\n    return;\n  }\n  target = event.target;\n\n  // Hardcode value of Node.TEXT_NODE\n  // as not defined in IE8\n  if (target.nodeType === 3) {\n    target = target.parentNode;\n  }\n\n  // Handle SVG <use> elements in IE\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n  root = this.rootElement;\n  phase = event.eventPhase || (event.target !== event.currentTarget ? 3 : 2);\n\n  // eslint-disable-next-line default-case\n  switch (phase) {\n    case 1:\n      //Event.CAPTURING_PHASE:\n      listenerList = this.listenerMap[1][type];\n      break;\n    case 2:\n      //Event.AT_TARGET:\n      if (this.listenerMap[0] && this.listenerMap[0][type]) {\n        listenerList = listenerList.concat(this.listenerMap[0][type]);\n      }\n      if (this.listenerMap[1] && this.listenerMap[1][type]) {\n        listenerList = listenerList.concat(this.listenerMap[1][type]);\n      }\n      break;\n    case 3:\n      //Event.BUBBLING_PHASE:\n      listenerList = this.listenerMap[0][type];\n      break;\n  }\n  let toFire = [];\n\n  // Need to continuously check\n  // that the specific list is\n  // still populated in case one\n  // of the callbacks actually\n  // causes the list to be destroyed.\n  l = listenerList.length;\n  while (target && l) {\n    for (i = 0; i < l; i++) {\n      listener = listenerList[i];\n\n      // Bail from this loop if\n      // the length changed and\n      // no more listeners are\n      // defined between i and l.\n      if (!listener) {\n        break;\n      }\n      if (target.tagName && [\"button\", \"input\", \"select\", \"textarea\"].indexOf(target.tagName.toLowerCase()) > -1 && target.hasAttribute(\"disabled\")) {\n        // Remove things that have previously fired\n        toFire = [];\n      }\n      // Check for match and fire\n      // the event if there's one\n      //\n      // TODO:MCG:20120117: Need a way\n      // to check if event#stopImmediatePropagation\n      // was called. If so, break both loops.\n      else if (listener.matcher.call(target, listener.matcherParam, target)) {\n        toFire.push([event, target, listener]);\n      }\n    }\n\n    // TODO:MCG:20120117: Need a way to\n    // check if event#stopPropagation\n    // was called. If so, break looping\n    // through the DOM. Stop if the\n    // delegation root has been reached\n    if (target === root) {\n      break;\n    }\n    l = listenerList.length;\n\n    // Fall back to parentNode since SVG children have no parentElement in IE\n    target = target.parentElement || target.parentNode;\n\n    // Do not traverse up to document root when using parentNode, though\n    if (target instanceof HTMLDocument) {\n      break;\n    }\n  }\n  let ret;\n  for (i = 0; i < toFire.length; i++) {\n    // Has it been removed during while the event function was fired\n    if (this._removedListeners.indexOf(toFire[i][2]) > -1) {\n      continue;\n    }\n    returned = this.fire.apply(this, toFire[i]);\n\n    // Stop propagation to subsequent\n    // callbacks if the callback returned\n    // false\n    if (returned === false) {\n      toFire[i][0][eventIgnore] = true;\n      toFire[i][0].preventDefault();\n      ret = false;\n      break;\n    }\n  }\n  return ret;\n};\n\n/**\n * Fire a listener on a target.\n *\n * @param {Event} event\n * @param {Node} target\n * @param {Object} listener\n * @returns {boolean}\n */\nDelegate.prototype.fire = function (event, target, listener) {\n  return listener.handler.call(target, event, target);\n};\n\n/**\n * Check whether an element\n * matches a tag selector.\n *\n * Tags are NOT case-sensitive,\n * except in XML (and XML-based\n * languages such as XHTML).\n *\n * @param {string} tagName The tag name to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesTag(tagName, element) {\n  return tagName.toLowerCase() === element.tagName.toLowerCase();\n}\n\n/**\n * Check whether an element\n * matches the root.\n *\n * @param {?String} selector In this case this is always passed through as null and not used\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesRoot(selector, element) {\n  if (this.rootElement === window) {\n    return (\n      // Match the outer document (dispatched from document)\n      element === document ||\n      // The <html> element (dispatched from document.body or document.documentElement)\n      element === document.documentElement ||\n      // Or the window itself (dispatched from window)\n      element === window\n    );\n  }\n  return this.rootElement === element;\n}\n\n/**\n * Check whether the ID of\n * the element in 'this'\n * matches the given ID.\n *\n * IDs are case-sensitive.\n *\n * @param {string} id The ID to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesId(id, element) {\n  return id === element.id;\n}\n\n/**\n * Short hand for off()\n * and root(), ie both\n * with no parameters\n *\n * @return void\n */\nDelegate.prototype.destroy = function () {\n  this.off();\n  this.root();\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Delegate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///e6b19cd3\n");

/***/ }),

/***/ "efadc595":
/*!**********************************************************************!*\
  !*** ./node_modules/fontfaceobserver/fontfaceobserver.standalone.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("/* Font Face Observer v2.3.0 - © Bram Stein. License: BSD-3-Clause */(function () {\n  function p(a, c) {\n    document.addEventListener ? a.addEventListener(\"scroll\", c, !1) : a.attachEvent(\"scroll\", c);\n  }\n  function u(a) {\n    document.body ? a() : document.addEventListener ? document.addEventListener(\"DOMContentLoaded\", function b() {\n      document.removeEventListener(\"DOMContentLoaded\", b);\n      a();\n    }) : document.attachEvent(\"onreadystatechange\", function g() {\n      if (\"interactive\" == document.readyState || \"complete\" == document.readyState) document.detachEvent(\"onreadystatechange\", g), a();\n    });\n  }\n  ;\n  function w(a) {\n    this.g = document.createElement(\"div\");\n    this.g.setAttribute(\"aria-hidden\", \"true\");\n    this.g.appendChild(document.createTextNode(a));\n    this.h = document.createElement(\"span\");\n    this.i = document.createElement(\"span\");\n    this.m = document.createElement(\"span\");\n    this.j = document.createElement(\"span\");\n    this.l = -1;\n    this.h.style.cssText = \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n    this.i.style.cssText = \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n    this.j.style.cssText = \"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n    this.m.style.cssText = \"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";\n    this.h.appendChild(this.m);\n    this.i.appendChild(this.j);\n    this.g.appendChild(this.h);\n    this.g.appendChild(this.i);\n  }\n  function x(a, c) {\n    a.g.style.cssText = \"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\" + c + \";\";\n  }\n  function B(a) {\n    var c = a.g.offsetWidth,\n      b = c + 100;\n    a.j.style.width = b + \"px\";\n    a.i.scrollLeft = b;\n    a.h.scrollLeft = a.h.scrollWidth + 100;\n    return a.l !== c ? (a.l = c, !0) : !1;\n  }\n  function C(a, c) {\n    function b() {\n      var e = g;\n      B(e) && null !== e.g.parentNode && c(e.l);\n    }\n    var g = a;\n    p(a.h, b);\n    p(a.i, b);\n    B(a);\n  }\n  ;\n  function D(a, c, b) {\n    c = c || {};\n    b = b || window;\n    this.family = a;\n    this.style = c.style || \"normal\";\n    this.weight = c.weight || \"normal\";\n    this.stretch = c.stretch || \"normal\";\n    this.context = b;\n  }\n  var E = null,\n    F = null,\n    G = null,\n    H = null;\n  function I(a) {\n    null === F && (M(a) && /Apple/.test(window.navigator.vendor) ? (a = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(window.navigator.userAgent), F = !!a && 603 > parseInt(a[1], 10)) : F = !1);\n    return F;\n  }\n  function M(a) {\n    null === H && (H = !!a.document.fonts);\n    return H;\n  }\n  function N(a, c) {\n    var b = a.style,\n      g = a.weight;\n    if (null === G) {\n      var e = document.createElement(\"div\");\n      try {\n        e.style.font = \"condensed 100px sans-serif\";\n      } catch (q) {}\n      G = \"\" !== e.style.font;\n    }\n    return [b, g, G ? a.stretch : \"\", \"100px\", c].join(\" \");\n  }\n  D.prototype.load = function (a, c) {\n    var b = this,\n      g = a || \"BESbswy\",\n      e = 0,\n      q = c || 3E3,\n      J = new Date().getTime();\n    return new Promise(function (K, L) {\n      if (M(b.context) && !I(b.context)) {\n        var O = new Promise(function (r, t) {\n            function h() {\n              new Date().getTime() - J >= q ? t(Error(\"\" + q + \"ms timeout exceeded\")) : b.context.document.fonts.load(N(b, '\"' + b.family + '\"'), g).then(function (n) {\n                1 <= n.length ? r() : setTimeout(h, 25);\n              }, t);\n            }\n            h();\n          }),\n          P = new Promise(function (r, t) {\n            e = setTimeout(function () {\n              t(Error(\"\" + q + \"ms timeout exceeded\"));\n            }, q);\n          });\n        Promise.race([P, O]).then(function () {\n          clearTimeout(e);\n          K(b);\n        }, L);\n      } else u(function () {\n        function r() {\n          var d;\n          if (d = -1 != k && -1 != l || -1 != k && -1 != m || -1 != l && -1 != m) (d = k != l && k != m && l != m) || (null === E && (d = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent), E = !!d && (536 > parseInt(d[1], 10) || 536 === parseInt(d[1], 10) && 11 >= parseInt(d[2], 10))), d = E && (k == y && l == y && m == y || k == z && l == z && m == z || k == A && l == A && m == A)), d = !d;\n          d && (null !== f.parentNode && f.parentNode.removeChild(f), clearTimeout(e), K(b));\n        }\n        function t() {\n          if (new Date().getTime() - J >= q) null !== f.parentNode && f.parentNode.removeChild(f), L(Error(\"\" + q + \"ms timeout exceeded\"));else {\n            var d = b.context.document.hidden;\n            if (!0 === d || void 0 === d) k = h.g.offsetWidth, l = n.g.offsetWidth, m = v.g.offsetWidth, r();\n            e = setTimeout(t, 50);\n          }\n        }\n        var h = new w(g),\n          n = new w(g),\n          v = new w(g),\n          k = -1,\n          l = -1,\n          m = -1,\n          y = -1,\n          z = -1,\n          A = -1,\n          f = document.createElement(\"div\");\n        f.dir = \"ltr\";\n        x(h, N(b, \"sans-serif\"));\n        x(n, N(b, \"serif\"));\n        x(v, N(b, \"monospace\"));\n        f.appendChild(h.g);\n        f.appendChild(n.g);\n        f.appendChild(v.g);\n        b.context.document.body.appendChild(f);\n        y = h.g.offsetWidth;\n        z = n.g.offsetWidth;\n        A = v.g.offsetWidth;\n        t();\n        C(h, function (d) {\n          k = d;\n          r();\n        });\n        x(h, N(b, '\"' + b.family + '\",sans-serif'));\n        C(n, function (d) {\n          l = d;\n          r();\n        });\n        x(n, N(b, '\"' + b.family + '\",serif'));\n        C(v, function (d) {\n          m = d;\n          r();\n        });\n        x(v, N(b, '\"' + b.family + '\",monospace'));\n      });\n    });\n  };\n   true ? module.exports = D : (undefined);\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWZhZGM1OTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZm9udGZhY2VvYnNlcnZlci9mb250ZmFjZW9ic2VydmVyLnN0YW5kYWxvbmUuanM/MDM0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb250IEZhY2UgT2JzZXJ2ZXIgdjIuMy4wIC0gwqkgQnJhbSBTdGVpbi4gTGljZW5zZTogQlNELTMtQ2xhdXNlICovKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcChhLGMpe2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXI/YS5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsYywhMSk6YS5hdHRhY2hFdmVudChcInNjcm9sbFwiLGMpfWZ1bmN0aW9uIHUoYSl7ZG9jdW1lbnQuYm9keT9hKCk6ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcj9kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLGZ1bmN0aW9uIGIoKXtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLGIpO2EoKX0pOmRvY3VtZW50LmF0dGFjaEV2ZW50KFwib25yZWFkeXN0YXRlY2hhbmdlXCIsZnVuY3Rpb24gZygpe2lmKFwiaW50ZXJhY3RpdmVcIj09ZG9jdW1lbnQucmVhZHlTdGF0ZXx8XCJjb21wbGV0ZVwiPT1kb2N1bWVudC5yZWFkeVN0YXRlKWRvY3VtZW50LmRldGFjaEV2ZW50KFwib25yZWFkeXN0YXRlY2hhbmdlXCIsZyksYSgpfSl9O2Z1bmN0aW9uIHcoYSl7dGhpcy5nPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7dGhpcy5nLnNldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpO3RoaXMuZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShhKSk7dGhpcy5oPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3RoaXMuaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTt0aGlzLm09ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7dGhpcy5qPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3RoaXMubD0tMTt0aGlzLmguc3R5bGUuY3NzVGV4dD1cIm1heC13aWR0aDpub25lO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7b3ZlcmZsb3c6c2Nyb2xsO2ZvbnQtc2l6ZToxNnB4O1wiO3RoaXMuaS5zdHlsZS5jc3NUZXh0PVwibWF4LXdpZHRoOm5vbmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246YWJzb2x1dGU7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtvdmVyZmxvdzpzY3JvbGw7Zm9udC1zaXplOjE2cHg7XCI7XG50aGlzLmouc3R5bGUuY3NzVGV4dD1cIm1heC13aWR0aDpub25lO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7b3ZlcmZsb3c6c2Nyb2xsO2ZvbnQtc2l6ZToxNnB4O1wiO3RoaXMubS5zdHlsZS5jc3NUZXh0PVwiZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MjAwJTtoZWlnaHQ6MjAwJTtmb250LXNpemU6MTZweDttYXgtd2lkdGg6bm9uZTtcIjt0aGlzLmguYXBwZW5kQ2hpbGQodGhpcy5tKTt0aGlzLmkuYXBwZW5kQ2hpbGQodGhpcy5qKTt0aGlzLmcuYXBwZW5kQ2hpbGQodGhpcy5oKTt0aGlzLmcuYXBwZW5kQ2hpbGQodGhpcy5pKX1cbmZ1bmN0aW9uIHgoYSxjKXthLmcuc3R5bGUuY3NzVGV4dD1cIm1heC13aWR0aDpub25lO21pbi13aWR0aDoyMHB4O21pbi1oZWlnaHQ6MjBweDtkaXNwbGF5OmlubGluZS1ibG9jaztvdmVyZmxvdzpoaWRkZW47cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6YXV0bzttYXJnaW46MDtwYWRkaW5nOjA7dG9wOi05OTlweDt3aGl0ZS1zcGFjZTpub3dyYXA7Zm9udC1zeW50aGVzaXM6bm9uZTtmb250OlwiK2MrXCI7XCJ9ZnVuY3Rpb24gQihhKXt2YXIgYz1hLmcub2Zmc2V0V2lkdGgsYj1jKzEwMDthLmouc3R5bGUud2lkdGg9YitcInB4XCI7YS5pLnNjcm9sbExlZnQ9YjthLmguc2Nyb2xsTGVmdD1hLmguc2Nyb2xsV2lkdGgrMTAwO3JldHVybiBhLmwhPT1jPyhhLmw9YywhMCk6ITF9ZnVuY3Rpb24gQyhhLGMpe2Z1bmN0aW9uIGIoKXt2YXIgZT1nO0IoZSkmJm51bGwhPT1lLmcucGFyZW50Tm9kZSYmYyhlLmwpfXZhciBnPWE7cChhLmgsYik7cChhLmksYik7QihhKX07ZnVuY3Rpb24gRChhLGMsYil7Yz1jfHx7fTtiPWJ8fHdpbmRvdzt0aGlzLmZhbWlseT1hO3RoaXMuc3R5bGU9Yy5zdHlsZXx8XCJub3JtYWxcIjt0aGlzLndlaWdodD1jLndlaWdodHx8XCJub3JtYWxcIjt0aGlzLnN0cmV0Y2g9Yy5zdHJldGNofHxcIm5vcm1hbFwiO3RoaXMuY29udGV4dD1ifXZhciBFPW51bGwsRj1udWxsLEc9bnVsbCxIPW51bGw7ZnVuY3Rpb24gSShhKXtudWxsPT09RiYmKE0oYSkmJi9BcHBsZS8udGVzdCh3aW5kb3cubmF2aWdhdG9yLnZlbmRvcik/KGE9L0FwcGxlV2ViS2l0XFwvKFswLTldKykoPzpcXC4oWzAtOV0rKSkoPzpcXC4oWzAtOV0rKSkvLmV4ZWMod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpLEY9ISFhJiY2MDM+cGFyc2VJbnQoYVsxXSwxMCkpOkY9ITEpO3JldHVybiBGfWZ1bmN0aW9uIE0oYSl7bnVsbD09PUgmJihIPSEhYS5kb2N1bWVudC5mb250cyk7cmV0dXJuIEh9XG5mdW5jdGlvbiBOKGEsYyl7dmFyIGI9YS5zdHlsZSxnPWEud2VpZ2h0O2lmKG51bGw9PT1HKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3RyeXtlLnN0eWxlLmZvbnQ9XCJjb25kZW5zZWQgMTAwcHggc2Fucy1zZXJpZlwifWNhdGNoKHEpe31HPVwiXCIhPT1lLnN0eWxlLmZvbnR9cmV0dXJuW2IsZyxHP2Euc3RyZXRjaDpcIlwiLFwiMTAwcHhcIixjXS5qb2luKFwiIFwiKX1cbkQucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oYSxjKXt2YXIgYj10aGlzLGc9YXx8XCJCRVNic3d5XCIsZT0wLHE9Y3x8M0UzLEo9KG5ldyBEYXRlKS5nZXRUaW1lKCk7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKEssTCl7aWYoTShiLmNvbnRleHQpJiYhSShiLmNvbnRleHQpKXt2YXIgTz1uZXcgUHJvbWlzZShmdW5jdGlvbihyLHQpe2Z1bmN0aW9uIGgoKXsobmV3IERhdGUpLmdldFRpbWUoKS1KPj1xP3QoRXJyb3IoXCJcIitxK1wibXMgdGltZW91dCBleGNlZWRlZFwiKSk6Yi5jb250ZXh0LmRvY3VtZW50LmZvbnRzLmxvYWQoTihiLCdcIicrYi5mYW1pbHkrJ1wiJyksZykudGhlbihmdW5jdGlvbihuKXsxPD1uLmxlbmd0aD9yKCk6c2V0VGltZW91dChoLDI1KX0sdCl9aCgpfSksUD1uZXcgUHJvbWlzZShmdW5jdGlvbihyLHQpe2U9c2V0VGltZW91dChmdW5jdGlvbigpe3QoRXJyb3IoXCJcIitxK1wibXMgdGltZW91dCBleGNlZWRlZFwiKSl9LHEpfSk7UHJvbWlzZS5yYWNlKFtQLE9dKS50aGVuKGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KGUpO1xuSyhiKX0sTCl9ZWxzZSB1KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcigpe3ZhciBkO2lmKGQ9LTEhPWsmJi0xIT1sfHwtMSE9ayYmLTEhPW18fC0xIT1sJiYtMSE9bSkoZD1rIT1sJiZrIT1tJiZsIT1tKXx8KG51bGw9PT1FJiYoZD0vQXBwbGVXZWJLaXRcXC8oWzAtOV0rKSg/OlxcLihbMC05XSspKS8uZXhlYyh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCksRT0hIWQmJig1MzY+cGFyc2VJbnQoZFsxXSwxMCl8fDUzNj09PXBhcnNlSW50KGRbMV0sMTApJiYxMT49cGFyc2VJbnQoZFsyXSwxMCkpKSxkPUUmJihrPT15JiZsPT15JiZtPT15fHxrPT16JiZsPT16JiZtPT16fHxrPT1BJiZsPT1BJiZtPT1BKSksZD0hZDtkJiYobnVsbCE9PWYucGFyZW50Tm9kZSYmZi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGYpLGNsZWFyVGltZW91dChlKSxLKGIpKX1mdW5jdGlvbiB0KCl7aWYoKG5ldyBEYXRlKS5nZXRUaW1lKCktSj49cSludWxsIT09Zi5wYXJlbnROb2RlJiZmLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZiksXG5MKEVycm9yKFwiXCIrcStcIm1zIHRpbWVvdXQgZXhjZWVkZWRcIikpO2Vsc2V7dmFyIGQ9Yi5jb250ZXh0LmRvY3VtZW50LmhpZGRlbjtpZighMD09PWR8fHZvaWQgMD09PWQpaz1oLmcub2Zmc2V0V2lkdGgsbD1uLmcub2Zmc2V0V2lkdGgsbT12Lmcub2Zmc2V0V2lkdGgscigpO2U9c2V0VGltZW91dCh0LDUwKX19dmFyIGg9bmV3IHcoZyksbj1uZXcgdyhnKSx2PW5ldyB3KGcpLGs9LTEsbD0tMSxtPS0xLHk9LTEsej0tMSxBPS0xLGY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtmLmRpcj1cImx0clwiO3goaCxOKGIsXCJzYW5zLXNlcmlmXCIpKTt4KG4sTihiLFwic2VyaWZcIikpO3godixOKGIsXCJtb25vc3BhY2VcIikpO2YuYXBwZW5kQ2hpbGQoaC5nKTtmLmFwcGVuZENoaWxkKG4uZyk7Zi5hcHBlbmRDaGlsZCh2LmcpO2IuY29udGV4dC5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGYpO3k9aC5nLm9mZnNldFdpZHRoO3o9bi5nLm9mZnNldFdpZHRoO0E9di5nLm9mZnNldFdpZHRoO3QoKTtcbkMoaCxmdW5jdGlvbihkKXtrPWQ7cigpfSk7eChoLE4oYiwnXCInK2IuZmFtaWx5KydcIixzYW5zLXNlcmlmJykpO0MobixmdW5jdGlvbihkKXtsPWQ7cigpfSk7eChuLE4oYiwnXCInK2IuZmFtaWx5KydcIixzZXJpZicpKTtDKHYsZnVuY3Rpb24oZCl7bT1kO3IoKX0pO3godixOKGIsJ1wiJytiLmZhbWlseSsnXCIsbW9ub3NwYWNlJykpfSl9KX07XCJvYmplY3RcIj09PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9RDood2luZG93LkZvbnRGYWNlT2JzZXJ2ZXI9RCx3aW5kb3cuRm9udEZhY2VPYnNlcnZlci5wcm90b3R5cGUubG9hZD1ELnByb3RvdHlwZS5sb2FkKTt9KCkpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///efadc595\n");

/***/ }),

/***/ "f5ad1795":
/*!****************************************************!*\
  !*** ./node_modules/morphdom/dist/morphdom-esm.js ***!
  \****************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar DOCUMENT_FRAGMENT_NODE = 11;\nfunction morphAttrs(fromNode, toNode) {\n  var toNodeAttrs = toNode.attributes;\n  var attr;\n  var attrName;\n  var attrNamespaceURI;\n  var attrValue;\n  var fromValue;\n\n  // document-fragments dont have attributes so lets not do anything\n  if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n    return;\n  }\n\n  // update attributes on original DOM element\n  for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n    attr = toNodeAttrs[i];\n    attrName = attr.name;\n    attrNamespaceURI = attr.namespaceURI;\n    attrValue = attr.value;\n    if (attrNamespaceURI) {\n      attrName = attr.localName || attrName;\n      fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n      if (fromValue !== attrValue) {\n        if (attr.prefix === 'xmlns') {\n          attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n        }\n        fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n      }\n    } else {\n      fromValue = fromNode.getAttribute(attrName);\n      if (fromValue !== attrValue) {\n        fromNode.setAttribute(attrName, attrValue);\n      }\n    }\n  }\n\n  // Remove any extra attributes found on the original DOM element that\n  // weren't found on the target element.\n  var fromNodeAttrs = fromNode.attributes;\n  for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n    attr = fromNodeAttrs[d];\n    attrName = attr.name;\n    attrNamespaceURI = attr.namespaceURI;\n    if (attrNamespaceURI) {\n      attrName = attr.localName || attrName;\n      if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n        fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n      }\n    } else {\n      if (!toNode.hasAttribute(attrName)) {\n        fromNode.removeAttribute(attrName);\n      }\n    }\n  }\n}\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\nfunction createFragmentFromTemplate(str) {\n  var template = doc.createElement('template');\n  template.innerHTML = str;\n  return template.content.childNodes[0];\n}\nfunction createFragmentFromRange(str) {\n  if (!range) {\n    range = doc.createRange();\n    range.selectNode(doc.body);\n  }\n  var fragment = range.createContextualFragment(str);\n  return fragment.childNodes[0];\n}\nfunction createFragmentFromWrap(str) {\n  var fragment = doc.createElement('body');\n  fragment.innerHTML = str;\n  return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n  str = str.trim();\n  if (HAS_TEMPLATE_SUPPORT) {\n    // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n    // createContextualFragment doesn't support\n    // <template> support not available in IE\n    return createFragmentFromTemplate(str);\n  } else if (HAS_RANGE_SUPPORT) {\n    return createFragmentFromRange(str);\n  }\n  return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n  var fromNodeName = fromEl.nodeName;\n  var toNodeName = toEl.nodeName;\n  var fromCodeStart, toCodeStart;\n  if (fromNodeName === toNodeName) {\n    return true;\n  }\n  fromCodeStart = fromNodeName.charCodeAt(0);\n  toCodeStart = toNodeName.charCodeAt(0);\n\n  // If the target element is a virtual DOM node or SVG node then we may\n  // need to normalize the tag name before comparing. Normal HTML elements that are\n  // in the \"http://www.w3.org/1999/xhtml\"\n  // are converted to upper case\n  if (fromCodeStart <= 90 && toCodeStart >= 97) {\n    // from is upper and to is lower\n    return fromNodeName === toNodeName.toUpperCase();\n  } else if (toCodeStart <= 90 && fromCodeStart >= 97) {\n    // to is upper and from is lower\n    return toNodeName === fromNodeName.toUpperCase();\n  } else {\n    return false;\n  }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n  return !namespaceURI || namespaceURI === NS_XHTML ? doc.createElement(name) : doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n  var curChild = fromEl.firstChild;\n  while (curChild) {\n    var nextChild = curChild.nextSibling;\n    toEl.appendChild(curChild);\n    curChild = nextChild;\n  }\n  return toEl;\n}\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n  if (fromEl[name] !== toEl[name]) {\n    fromEl[name] = toEl[name];\n    if (fromEl[name]) {\n      fromEl.setAttribute(name, '');\n    } else {\n      fromEl.removeAttribute(name);\n    }\n  }\n}\nvar specialElHandlers = {\n  OPTION: function (fromEl, toEl) {\n    var parentNode = fromEl.parentNode;\n    if (parentNode) {\n      var parentName = parentNode.nodeName.toUpperCase();\n      if (parentName === 'OPTGROUP') {\n        parentNode = parentNode.parentNode;\n        parentName = parentNode && parentNode.nodeName.toUpperCase();\n      }\n      if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n        if (fromEl.hasAttribute('selected') && !toEl.selected) {\n          // Workaround for MS Edge bug where the 'selected' attribute can only be\n          // removed if set to a non-empty value:\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n          fromEl.setAttribute('selected', 'selected');\n          fromEl.removeAttribute('selected');\n        }\n        // We have to reset select element's selectedIndex to -1, otherwise setting\n        // fromEl.selected using the syncBooleanAttrProp below has no effect.\n        // The correct selectedIndex will be set in the SELECT special handler below.\n        parentNode.selectedIndex = -1;\n      }\n    }\n    syncBooleanAttrProp(fromEl, toEl, 'selected');\n  },\n  /**\n   * The \"value\" attribute is special for the <input> element since it sets\n   * the initial value. Changing the \"value\" attribute without changing the\n   * \"value\" property will have no effect since it is only used to the set the\n   * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n   */\n  INPUT: function (fromEl, toEl) {\n    syncBooleanAttrProp(fromEl, toEl, 'checked');\n    syncBooleanAttrProp(fromEl, toEl, 'disabled');\n    if (fromEl.value !== toEl.value) {\n      fromEl.value = toEl.value;\n    }\n    if (!toEl.hasAttribute('value')) {\n      fromEl.removeAttribute('value');\n    }\n  },\n  TEXTAREA: function (fromEl, toEl) {\n    var newValue = toEl.value;\n    if (fromEl.value !== newValue) {\n      fromEl.value = newValue;\n    }\n    var firstChild = fromEl.firstChild;\n    if (firstChild) {\n      // Needed for IE. Apparently IE sets the placeholder as the\n      // node value and vise versa. This ignores an empty update.\n      var oldValue = firstChild.nodeValue;\n      if (oldValue == newValue || !newValue && oldValue == fromEl.placeholder) {\n        return;\n      }\n      firstChild.nodeValue = newValue;\n    }\n  },\n  SELECT: function (fromEl, toEl) {\n    if (!toEl.hasAttribute('multiple')) {\n      var selectedIndex = -1;\n      var i = 0;\n      // We have to loop through children of fromEl, not toEl since nodes can be moved\n      // from toEl to fromEl directly when morphing.\n      // At the time this special handler is invoked, all children have already been morphed\n      // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n      var curChild = fromEl.firstChild;\n      var optgroup;\n      var nodeName;\n      while (curChild) {\n        nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n        if (nodeName === 'OPTGROUP') {\n          optgroup = curChild;\n          curChild = optgroup.firstChild;\n        } else {\n          if (nodeName === 'OPTION') {\n            if (curChild.hasAttribute('selected')) {\n              selectedIndex = i;\n              break;\n            }\n            i++;\n          }\n          curChild = curChild.nextSibling;\n          if (!curChild && optgroup) {\n            curChild = optgroup.nextSibling;\n            optgroup = null;\n          }\n        }\n      }\n      fromEl.selectedIndex = selectedIndex;\n    }\n  }\n};\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\nfunction noop() {}\nfunction defaultGetNodeKey(node) {\n  if (node) {\n    return node.getAttribute && node.getAttribute('id') || node.id;\n  }\n}\nfunction morphdomFactory(morphAttrs) {\n  return function morphdom(fromNode, toNode, options) {\n    if (!options) {\n      options = {};\n    }\n    if (typeof toNode === 'string') {\n      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n        var toNodeHtml = toNode;\n        toNode = doc.createElement('html');\n        toNode.innerHTML = toNodeHtml;\n      } else {\n        toNode = toElement(toNode);\n      }\n    } else if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n      toNode = toNode.firstElementChild;\n    }\n    var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n    var onNodeAdded = options.onNodeAdded || noop;\n    var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n    var onElUpdated = options.onElUpdated || noop;\n    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n    var onNodeDiscarded = options.onNodeDiscarded || noop;\n    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n    var skipFromChildren = options.skipFromChildren || noop;\n    var addChild = options.addChild || function (parent, child) {\n      return parent.appendChild(child);\n    };\n    var childrenOnly = options.childrenOnly === true;\n\n    // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n    var fromNodesLookup = Object.create(null);\n    var keyedRemovalList = [];\n    function addKeyedRemoval(key) {\n      keyedRemovalList.push(key);\n    }\n    function walkDiscardedChildNodes(node, skipKeyedNodes) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n        while (curChild) {\n          var key = undefined;\n          if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n            // If we are skipping keyed nodes then we add the key\n            // to a list so that it can be handled at the very end.\n            addKeyedRemoval(key);\n          } else {\n            // Only report the node as discarded if it is not keyed. We do this because\n            // at the end we loop through all keyed elements that were unmatched\n            // and then discard them in one final pass.\n            onNodeDiscarded(curChild);\n            if (curChild.firstChild) {\n              walkDiscardedChildNodes(curChild, skipKeyedNodes);\n            }\n          }\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    /**\n    * Removes a DOM node out of the original DOM\n    *\n    * @param  {Node} node The node to remove\n    * @param  {Node} parentNode The nodes parent\n    * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n    * @return {undefined}\n    */\n    function removeNode(node, parentNode, skipKeyedNodes) {\n      if (onBeforeNodeDiscarded(node) === false) {\n        return;\n      }\n      if (parentNode) {\n        parentNode.removeChild(node);\n      }\n      onNodeDiscarded(node);\n      walkDiscardedChildNodes(node, skipKeyedNodes);\n    }\n\n    // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n    // function indexTree(root) {\n    //     var treeWalker = document.createTreeWalker(\n    //         root,\n    //         NodeFilter.SHOW_ELEMENT);\n    //\n    //     var el;\n    //     while((el = treeWalker.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n    //\n    // function indexTree(node) {\n    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n    //     var el;\n    //     while((el = nodeIterator.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    function indexTree(node) {\n      if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n        var curChild = node.firstChild;\n        while (curChild) {\n          var key = getNodeKey(curChild);\n          if (key) {\n            fromNodesLookup[key] = curChild;\n          }\n\n          // Walk recursively\n          indexTree(curChild);\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n    indexTree(fromNode);\n    function handleNodeAdded(el) {\n      onNodeAdded(el);\n      var curChild = el.firstChild;\n      while (curChild) {\n        var nextSibling = curChild.nextSibling;\n        var key = getNodeKey(curChild);\n        if (key) {\n          var unmatchedFromEl = fromNodesLookup[key];\n          // if we find a duplicate #id node in cache, replace `el` with cache value\n          // and morph it to the child node.\n          if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n            morphEl(unmatchedFromEl, curChild);\n          } else {\n            handleNodeAdded(curChild);\n          }\n        } else {\n          // recursively call for curChild and it's children to see if we find something in\n          // fromNodesLookup\n          handleNodeAdded(curChild);\n        }\n        curChild = nextSibling;\n      }\n    }\n    function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n      // We have processed all of the \"to nodes\". If curFromNodeChild is\n      // non-null then we still have some from nodes left over that need\n      // to be removed\n      while (curFromNodeChild) {\n        var fromNextSibling = curFromNodeChild.nextSibling;\n        if (curFromNodeKey = getNodeKey(curFromNodeChild)) {\n          // Since the node is keyed it might be matched up later so we defer\n          // the actual removal to later\n          addKeyedRemoval(curFromNodeKey);\n        } else {\n          // NOTE: we skip nested keyed nodes from being removed since there is\n          //       still a chance they will be matched up later\n          removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n        }\n        curFromNodeChild = fromNextSibling;\n      }\n    }\n    function morphEl(fromEl, toEl, childrenOnly) {\n      var toElKey = getNodeKey(toEl);\n      if (toElKey) {\n        // If an element with an ID is being morphed then it will be in the final\n        // DOM so clear it out of the saved elements collection\n        delete fromNodesLookup[toElKey];\n      }\n      if (!childrenOnly) {\n        // optional\n        if (onBeforeElUpdated(fromEl, toEl) === false) {\n          return;\n        }\n\n        // update attributes on original DOM element first\n        morphAttrs(fromEl, toEl);\n        // optional\n        onElUpdated(fromEl);\n        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n          return;\n        }\n      }\n      if (fromEl.nodeName !== 'TEXTAREA') {\n        morphChildren(fromEl, toEl);\n      } else {\n        specialElHandlers.TEXTAREA(fromEl, toEl);\n      }\n    }\n    function morphChildren(fromEl, toEl) {\n      var skipFrom = skipFromChildren(fromEl, toEl);\n      var curToNodeChild = toEl.firstChild;\n      var curFromNodeChild = fromEl.firstChild;\n      var curToNodeKey;\n      var curFromNodeKey;\n      var fromNextSibling;\n      var toNextSibling;\n      var matchingFromEl;\n\n      // walk the children\n      outer: while (curToNodeChild) {\n        toNextSibling = curToNodeChild.nextSibling;\n        curToNodeKey = getNodeKey(curToNodeChild);\n\n        // walk the fromNode children all the way through\n        while (!skipFrom && curFromNodeChild) {\n          fromNextSibling = curFromNodeChild.nextSibling;\n          if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n          curFromNodeKey = getNodeKey(curFromNodeChild);\n          var curFromNodeType = curFromNodeChild.nodeType;\n\n          // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n          var isCompatible = undefined;\n          if (curFromNodeType === curToNodeChild.nodeType) {\n            if (curFromNodeType === ELEMENT_NODE) {\n              // Both nodes being compared are Element nodes\n\n              if (curToNodeKey) {\n                // The target node has a key so we want to match it up with the correct element\n                // in the original DOM tree\n                if (curToNodeKey !== curFromNodeKey) {\n                  // The current element in the original DOM tree does not have a matching key so\n                  // let's check our lookup to see if there is a matching element in the original\n                  // DOM tree\n                  if (matchingFromEl = fromNodesLookup[curToNodeKey]) {\n                    if (fromNextSibling === matchingFromEl) {\n                      // Special case for single element removals. To avoid removing the original\n                      // DOM node out of the tree (since that can break CSS transitions, etc.),\n                      // we will instead discard the current node and wait until the next\n                      // iteration to properly match up the keyed target element with its matching\n                      // element in the original tree\n                      isCompatible = false;\n                    } else {\n                      // We found a matching keyed element somewhere in the original DOM tree.\n                      // Let's move the original DOM node into the current position and morph\n                      // it.\n\n                      // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                      // the `removeNode()` function for the node that is being discarded so that\n                      // all lifecycle hooks are correctly invoked\n                      fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                      // fromNextSibling = curFromNodeChild.nextSibling;\n\n                      if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                      } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                      }\n                      curFromNodeChild = matchingFromEl;\n                      curFromNodeKey = getNodeKey(curFromNodeChild);\n                    }\n                  } else {\n                    // The nodes are not compatible since the \"to\" node has a key and there\n                    // is no matching keyed node in the source tree\n                    isCompatible = false;\n                  }\n                }\n              } else if (curFromNodeKey) {\n                // The original has a key\n                isCompatible = false;\n              }\n              isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n              if (isCompatible) {\n                // We found compatible DOM elements so transform\n                // the current \"from\" node to match the current\n                // target DOM node.\n                // MORPH\n                morphEl(curFromNodeChild, curToNodeChild);\n              }\n            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n              // Both nodes being compared are Text or Comment nodes\n              isCompatible = true;\n              // Simply update nodeValue on the original node to\n              // change the text value\n              if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n              }\n            }\n          }\n          if (isCompatible) {\n            // Advance both the \"to\" child and the \"from\" child since we found a match\n            // Nothing else to do as we already recursively called morphChildren above\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          // No compatible match so remove the old node from the DOM and continue trying to find a\n          // match in the original DOM. However, we only do this if the from node is not keyed\n          // since it is possible that a keyed node might match up with a node somewhere else in the\n          // target tree and we don't want to discard it just yet since it still might find a\n          // home in the final DOM tree. After everything is done we will remove any keyed nodes\n          // that didn't find a home\n          if (curFromNodeKey) {\n            // Since the node is keyed it might be matched up later so we defer\n            // the actual removal to later\n            addKeyedRemoval(curFromNodeKey);\n          } else {\n            // NOTE: we skip nested keyed nodes from being removed since there is\n            //       still a chance they will be matched up later\n            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n          }\n          curFromNodeChild = fromNextSibling;\n        } // END: while(curFromNodeChild) {}\n\n        // If we got this far then we did not find a candidate match for\n        // our \"to node\" and we exhausted all of the children \"from\"\n        // nodes. Therefore, we will just append the current \"to\" node\n        // to the end\n        if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n          // MORPH\n          if (!skipFrom) {\n            addChild(fromEl, matchingFromEl);\n          }\n          morphEl(matchingFromEl, curToNodeChild);\n        } else {\n          var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n          if (onBeforeNodeAddedResult !== false) {\n            if (onBeforeNodeAddedResult) {\n              curToNodeChild = onBeforeNodeAddedResult;\n            }\n            if (curToNodeChild.actualize) {\n              curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n            }\n            addChild(fromEl, curToNodeChild);\n            handleNodeAdded(curToNodeChild);\n          }\n        }\n        curToNodeChild = toNextSibling;\n        curFromNodeChild = fromNextSibling;\n      }\n      cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n      var specialElHandler = specialElHandlers[fromEl.nodeName];\n      if (specialElHandler) {\n        specialElHandler(fromEl, toEl);\n      }\n    } // END: morphChildren(...)\n\n    var morphedNode = fromNode;\n    var morphedNodeType = morphedNode.nodeType;\n    var toNodeType = toNode.nodeType;\n    if (!childrenOnly) {\n      // Handle the case where we are given two DOM nodes that are not\n      // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n      if (morphedNodeType === ELEMENT_NODE) {\n        if (toNodeType === ELEMENT_NODE) {\n          if (!compareNodeNames(fromNode, toNode)) {\n            onNodeDiscarded(fromNode);\n            morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n          }\n        } else {\n          // Going from an element node to a text node\n          morphedNode = toNode;\n        }\n      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) {\n        // Text or comment node\n        if (toNodeType === morphedNodeType) {\n          if (morphedNode.nodeValue !== toNode.nodeValue) {\n            morphedNode.nodeValue = toNode.nodeValue;\n          }\n          return morphedNode;\n        } else {\n          // Text node to something else\n          morphedNode = toNode;\n        }\n      }\n    }\n    if (morphedNode === toNode) {\n      // The \"to node\" was not compatible with the \"from node\" so we had to\n      // toss out the \"from node\" and use the \"to node\"\n      onNodeDiscarded(fromNode);\n    } else {\n      if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n        return;\n      }\n      morphEl(morphedNode, toNode, childrenOnly);\n\n      // We now need to loop over any keyed nodes that might need to be\n      // removed. We only do the removal if we know that the keyed node\n      // never found a match. When a keyed node is matched up we remove\n      // it out of fromNodesLookup and we use fromNodesLookup to determine\n      // if a keyed node has been matched up or not\n      if (keyedRemovalList) {\n        for (var i = 0, len = keyedRemovalList.length; i < len; i++) {\n          var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n          if (elToRemove) {\n            removeNode(elToRemove, elToRemove.parentNode, false);\n          }\n        }\n      }\n    }\n    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n      if (morphedNode.actualize) {\n        morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n      }\n      // If we had to swap out the from node with a new node because the old\n      // node was not compatible with the target node then we need to\n      // replace the old DOM node in the original DOM tree. This is only\n      // possible if the original DOM node was part of a DOM tree which\n      // we know is the case if it has a parent node.\n      fromNode.parentNode.replaceChild(morphedNode, fromNode);\n    }\n    return morphedNode;\n  };\n}\nvar morphdom = morphdomFactory(morphAttrs);\n/* harmony default export */ __webpack_exports__[\"default\"] = (morphdom);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///f5ad1795\n");

/***/ })

}]);